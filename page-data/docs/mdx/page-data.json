{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/mdx","result":{"data":{"doc":{"__typename":"MdxDoc","id":"b49d8145-caa1-5f7f-8f2f-e94455d88387","title":"MDX","slug":"/docs/mdx","excerpt":"MDX is the Markdown format extended to allows JSX components.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MDX\",\n  \"excerpt\": \"MDX is the Markdown format extended to allows JSX components.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Reflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\"), mdx(\"h2\", null, \"Components\"), mdx(\"p\", null, \"Components can be imported or written inline with your Markdown content.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\nimport { Example } from \\\"package\\\" // highlight-line\\n\\n# Heading 1\\n\\nA paragraph officiis labore excepturi nam.\\n\\n<Block src=\\\"hero\\\" /> // highlight-line\\n\\nAnother paragraph.\\n\\n<Button>A button</Button> component.\\n\")), mdx(\"h2\", null, \"Styling\"), mdx(\"p\", null, \"Components in MDX files can be styled using style props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\n<P color=\\\"primary\\\">A paragraph in primary color</P>\\n\\n<H3 mb=\\\"4\\\">A heading with margin bottom</H3>\\n\")), mdx(\"p\", null, \"See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/godot-academy/theme\"\n  }), \"Theme reference\"), \" for style props values.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#components","title":"Components"},{"url":"#styling","title":"Styling"}],"timeToRead":1,"data":{"title":"MDX","excerpt":"MDX is the Markdown format extended to allows JSX components.","rawBody":"---\ntitle: MDX\nexcerpt: MDX is the Markdown format extended to allows JSX components.\n---\n\nReflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\n\n## Components\n\nComponents can be imported or written inline with your Markdown content.\n\n```jsx\n---\ntitle: A page\n---\n\nimport { Example } from \"package\" // highlight-line\n\n# Heading 1\n\nA paragraph officiis labore excepturi nam.\n\n<Block src=\"hero\" /> // highlight-line\n\nAnother paragraph.\n\n<Button>A button</Button> component.\n```\n\n## Styling\n\nComponents in MDX files can be styled using style props.\n\n```jsx\n---\ntitle: A page\n---\n\n<P color=\"primary\">A paragraph in primary color</P>\n\n<H3 mb=\"4\">A heading with margin bottom</H3>\n```\n\nSee the [Theme reference](/theme) for style props values.\n"}},"prev":{"__typename":"MdxDoc","id":"379b5c8c-522a-542e-b76d-a8a3f26cf909","title":"Configure your editor","slug":"/docs/editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configure your editor\",\n  \"excerpt\": \"Some helpful settings and extensions to make developing with Reflex easier.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"VS Code\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enable Auto Save on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"onFocuseChange\"), \". \")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  Settings / User tab / Text Editor / Files / Auto Save - onFocuseChange\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enable Auto Reveal on File open, this is optional.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"  Settings / User tab / Features / Explorer / Auto Reveal - true\\n\")), mdx(\"p\", null, \"this means each time you open a file, the left EXPLORER panel will scroll to focus file name.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#vs-code","title":"VS Code"}],"timeToRead":1,"data":{"title":"Configure your editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","rawBody":"---\ntitle: Configure your editor\nexcerpt: Some helpful settings and extensions to make developing with Reflex easier.\n---\n\n## VS Code\n\n1. Enable Auto Save on `onFocuseChange`. \n\n```\n  Settings / User tab / Text Editor / Files / Auto Save - onFocuseChange\n```\n\n2. Enable Auto Reveal on File open, this is optional.\n\n```\n  Settings / User tab / Features / Explorer / Auto Reveal - true\n```\n  \nthis means each time you open a file, the left EXPLORER panel will scroll to focus file name.\n\n"}},"next":{"__typename":"MdxDoc","id":"6f0aa10c-616c-5a77-b0fd-fa9916b75f20","title":"Directory Structure","slug":"/docs/structure","excerpt":"The base Reflex structure is intended to provide a great starting point for building your site.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Directory Structure\",\n  \"excerpt\": \"The base Reflex structure is intended to provide a great starting point for building your site.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Hr = makeShortcode(\"Hr\");\nvar ButtonLink = makeShortcode(\"ButtonLink\");\nvar Icon = makeShortcode(\"Icon\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"However, Reflex imposes no restrictions on how you organize your content.\"), mdx(\"p\", null, \"Every theme exposes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contentPath\"), \" option that you can use to change where you place content files.\"), mdx(\"h2\", null, \"Structure\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"mysite\\n\\u251C\\u2500\\u2500 content\\n\\u2502   \\u251C\\u2500\\u2500 blocks\\n\\u2502   \\u251C\\u2500\\u2500 images\\n\\u2502   \\u251C\\u2500\\u2500 navs\\n\\u2502   \\u2514\\u2500\\u2500 pages\\n\\u251C\\u2500\\u2500 .env.example\\n\\u251C\\u2500\\u2500 .gitignore\\n\\u251C\\u2500\\u2500 gatsby-config.js\\n\\u251C\\u2500\\u2500 package.json\\n\\u2514\\u2500\\u2500 README.md\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"content\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"content\"), \" directory contains all your site content. This is where you place your pages, blocks and images.\"), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"blocks\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"blocks\"), \" directory is for your re-usable blocks. Place your blocks here and reference them in your pages using the block name.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Block src=\\\"name-of-block\\\" />\"), \" is for a block at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/blocks/name-of-block.mdx\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/blocks\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about blocks \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"images\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"images\"), \" directory is for your images. Add your image files here and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Image\"), \" component to render them.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Image src=\\\"name-of-image.png\\\" />\"), \" will render an image placed at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/images/name-of-image.png\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/images\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about images \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"navs\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"navs\"), \" directory is for navigation menus. Add your menus here and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavMenu\"), \" component to place them in blocks or pages.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<NavMenu name=\\\"header\\\" />\"), \" will render a nav placed at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/navs/header.mdx\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/navs\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about navs \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"pages\"), mdx(\"p\", null, \"This directory is where you place your pages. Every file placed in the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"pages\"), \" directory are automatically turned into pages with the page name as the slug.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"A page at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/pages/example.mdx\"), \" will turned into a page with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/example\"), \" path.\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/pages\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about pages \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#structure","title":"Structure","items":[{"url":"#content","title":"content"},{"url":"#blocks","title":"blocks"},{"url":"#images","title":"images"},{"url":"#navs","title":"navs"},{"url":"#pages","title":"pages"}]}],"timeToRead":1,"data":{"title":"Directory Structure","excerpt":"The base Reflex structure is intended to provide a great starting point for building your site.","rawBody":"---\ntitle: Directory Structure\nexcerpt: The base Reflex structure is intended to provide a great starting point for building your site.\n---\n\nHowever, Reflex imposes no restrictions on how you organize your content.\n\nEvery theme exposes a `contentPath` option that you can use to change where you place content files.\n\n## Structure\n\n```\nmysite\n├── content\n│   ├── blocks\n│   ├── images\n│   ├── navs\n│   └── pages\n├── .env.example\n├── .gitignore\n├── gatsby-config.js\n├── package.json\n└── README.md\n```\n\n<Hr mt=\"8\" />\n\n### content\n\nThe _content_ directory contains all your site content. This is where you place your pages, blocks and images.\n\n<Hr mt=\"8\" />\n\n### blocks\n\nThe _blocks_ directory is for your re-usable blocks. Place your blocks here and reference them in your pages using the block name.\n\n**Example**\n\n`<Block src=\"name-of-block\" />` is for a block at `content/blocks/name-of-block.mdx`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/blocks\">\n  Learn more about blocks <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### images\n\nThe _images_ directory is for your images. Add your image files here and use the `Image` component to render them.\n\n**Example**\n\n`<Image src=\"name-of-image.png\" />` will render an image placed at `content/images/name-of-image.png`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/images\">\n  Learn more about images <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### navs\n\nThe _navs_ directory is for navigation menus. Add your menus here and use the `NavMenu` component to place them in blocks or pages.\n\n**Example**\n\n`<NavMenu name=\"header\" />` will render a nav placed at `content/navs/header.mdx`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/navs\">\n  Learn more about navs <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### pages\n\nThis directory is where you place your pages. Every file placed in the _pages_ directory are automatically turned into pages with the page name as the slug.\n\n**Example**\n\nA page at `content/pages/example.mdx` will turned into a page with the `/example` path.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/pages\">\n  Learn more about pages <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n"}}},"pageContext":{"id":"b49d8145-caa1-5f7f-8f2f-e94455d88387","prev":"379b5c8c-522a-542e-b76d-a8a3f26cf909","next":"6f0aa10c-616c-5a77-b0fd-fa9916b75f20"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}