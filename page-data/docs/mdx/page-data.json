{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/mdx","result":{"data":{"doc":{"__typename":"MdxDoc","id":"b49d8145-caa1-5f7f-8f2f-e94455d88387","title":"MDX","slug":"/docs/mdx","excerpt":"MDX is the Markdown format extended to allows JSX components.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MDX\",\n  \"excerpt\": \"MDX is the Markdown format extended to allows JSX components.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Reflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\"), mdx(\"h2\", null, \"Components\"), mdx(\"p\", null, \"Components can be imported or written inline with your Markdown content.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\nimport { Example } from \\\"package\\\" // highlight-line\\n\\n# Heading 1\\n\\nA paragraph officiis labore excepturi nam.\\n\\n<Block src=\\\"hero\\\" /> // highlight-line\\n\\nAnother paragraph.\\n\\n<Button>A button</Button> component.\\n\")), mdx(\"h2\", null, \"Styling\"), mdx(\"p\", null, \"Components in MDX files can be styled using style props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\n<P color=\\\"primary\\\">A paragraph in primary color</P>\\n\\n<H3 mb=\\\"4\\\">A heading with margin bottom</H3>\\n\")), mdx(\"p\", null, \"See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/theme\"\n  }), \"Theme reference\"), \" for style props values.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#components","title":"Components"},{"url":"#styling","title":"Styling"}],"timeToRead":1,"data":{"title":"MDX","excerpt":"MDX is the Markdown format extended to allows JSX components.","rawBody":"---\ntitle: MDX\nexcerpt: MDX is the Markdown format extended to allows JSX components.\n---\n\nReflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\n\n## Components\n\nComponents can be imported or written inline with your Markdown content.\n\n```jsx\n---\ntitle: A page\n---\n\nimport { Example } from \"package\" // highlight-line\n\n# Heading 1\n\nA paragraph officiis labore excepturi nam.\n\n<Block src=\"hero\" /> // highlight-line\n\nAnother paragraph.\n\n<Button>A button</Button> component.\n```\n\n## Styling\n\nComponents in MDX files can be styled using style props.\n\n```jsx\n---\ntitle: A page\n---\n\n<P color=\"primary\">A paragraph in primary color</P>\n\n<H3 mb=\"4\">A heading with margin bottom</H3>\n```\n\nSee the [Theme reference](/theme) for style props values.\n"}},"prev":{"__typename":"MdxDoc","id":"379b5c8c-522a-542e-b76d-a8a3f26cf909","title":"Configure your editor","slug":"/docs/editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configure your editor\",\n  \"excerpt\": \"Some helpful settings and extensions to make developing with Reflex easier.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"VS Code\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx\"\n  }), \"VSCode MDX\"), \" extension to add language support for MDX.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ESLint\"), \" support for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".md\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" extensions.\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=.vscode/settings.json\",\n    \"title\": \".vscode/settings.json\"\n  }), \"{\\n  \\\"editor.codeActionsOnSave\\\": {\\n    \\\"source.fixAll\\\": true\\n  },\\n  \\\"eslint.options\\\": {\\n    \\\"extensions\\\": [\\\".js\\\", \\\".jsx\\\", \\\".md\\\", \\\".mdx\\\", \\\".ts\\\", \\\".tsx\\\"] // highlight-line\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#vs-code","title":"VS Code"}],"timeToRead":1,"data":{"title":"Configure your editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","rawBody":"---\ntitle: Configure your editor\nexcerpt: Some helpful settings and extensions to make developing with Reflex easier.\n---\n\n## VS Code\n\n1. Install the [VSCode MDX](https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx) extension to add language support for MDX.\n\n2. Enable `ESLint` support for `.md` and `.mdx` extensions.\n\n```js title=.vscode/settings.json\n{\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll\": true\n  },\n  \"eslint.options\": {\n    \"extensions\": [\".js\", \".jsx\", \".md\", \".mdx\", \".ts\", \".tsx\"] // highlight-line\n  }\n}\n```\n"}},"next":{"__typename":"MdxDoc","id":"e3d7371a-4aa0-55d6-902a-32ecd6cb8757","title":"Build a landing page","slug":"/docs/pages","excerpt":"Learn how to build a landing page using blocks.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Build a landing page\",\n  \"excerpt\": \"Learn how to build a landing page using blocks.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar Strong = makeShortcode(\"Strong\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Reflex ships with a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Page\"), \" type. You can use a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"page\"), \" to create a simple\\ntext-based page or a complex landing page with \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/components\"\n  }), \"components\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/blocks\"\n  }), \"blocks\"), \".\"), mdx(\"h2\", null, \"Add a page\"), mdx(\"p\", null, \"To add a page, create a file in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/pages\"), \" directory. Example: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/pages/about.mdx\"), \".\"), mdx(Callout, {\n    my: \"8\",\n    mdxType: \"Callout\"\n  }, \"You can use either \", mdx(Strong, {\n    mdxType: \"Strong\"\n  }, \".mdx\"), \" or \", mdx(Strong, {\n    mdxType: \"Strong\"\n  }, \".md\"), \" file extension. They both work.\"), mdx(\"p\", null, \"A basic page looks like this.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n# Add your content here.\\n\")), mdx(\"p\", null, \"On save, Gatsby will automatically create a new page for you at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/about\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#add-a-page","title":"Add a page"}],"timeToRead":1,"data":{"title":"Build a landing page","excerpt":"Learn how to build a landing page using blocks.","rawBody":"---\ntitle: Build a landing page\nexcerpt: Learn how to build a landing page using blocks.\n---\n\nReflex ships with a **Page** type. You can use a **page** to create a simple\ntext-based page or a complex landing page with [components](/docs/components) and [blocks](/docs/blocks).\n\n## Add a page\n\nTo add a page, create a file in the `content/pages` directory. Example: `content/pages/about.mdx`.\n\n<Callout my=\"8\">\n  You can use either <Strong>.mdx</Strong> or <Strong>.md</Strong> file\n  extension. They both work.\n</Callout>\n\nA basic page looks like this.\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n# Add your content here.\n```\n\nOn save, Gatsby will automatically create a new page for you at `/about`.\n"}}},"pageContext":{"id":"b49d8145-caa1-5f7f-8f2f-e94455d88387","prev":"379b5c8c-522a-542e-b76d-a8a3f26cf909","next":"e3d7371a-4aa0-55d6-902a-32ecd6cb8757"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}