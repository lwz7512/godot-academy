{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/blog-metatags","result":{"data":{"doc":{"__typename":"MdxDoc","id":"358a8e23-ad3d-5011-889e-e61848e8e346","title":"Meta tags","slug":"/docs/blog-metatags","excerpt":"Add Open Graph and Twitter meta tags to your blog.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Meta tags\",\n  \"excerpt\": \"Add Open Graph and Twitter meta tags to your blog.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1: Add the metatags package\")), mdx(\"p\", null, \"To enable metatags for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Post\"), \", add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-plugin-metatags\"), \" package.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i @reflexjs/gatsby-plugin-metatags\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2: Enable metatags for the Post type\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"require(`dotenv`).config()\\n\\nmodule.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    \\\"@reflexjs/gatsby-theme-post\\\",\\n    // highlight-start\\n    {\\n      resolve: \\\"@reflexjs/gatsby-plugin-metatags\\\",\\n      options: {\\n        types: [\\n          `Post`\\n        ]\\n      }\\n    }\\n    // highlight-end\\n  ],\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3: Add metatags to post\")), mdx(\"p\", null, \"Edit your post and add metatags.\"), mdx(Callout, {\n    my: \"8\",\n    pt: \"0\",\n    pb: \"2\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": If you do not provide the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metatags\"), \" values, it will automatically be generated for you from the post title, description and image.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/posts/2020-07-08-slug-of-post.mdx\",\n    \"title\": \"content/posts/2020-07-08-slug-of-post.mdx\"\n  }), \"---\\ntitle: Title of the Post\\nexcerpt: A short description for this post.\\ndate: 2020-07-08\\nimage: cover-image-for-post.jpg\\ncaption: Caption for the cover image\\npublished: true\\nfeatured: true\\nauthor: Megan Morales\\ntags:\\n  - Writing\\n  - Stories\\n// highlight-start\\nmetatags:\\n  title: Title of the Post\\n  description: A description for meta description\\n  og:\\n    title: A custom title for open graph.\\n    description: Custom description for open graph.\\n    image: Image for open graph.\\n    type: article\\n  twitter:\\n    title: A custom title for Twitter cards.\\n    description: Description for Twitter cards.\\n    image: Custom image for Twitter cards.\\n    card: summary or summary_large_image\\n// highlight-end\\n---\\n\\nPost content goes here.\\n\")), mdx(\"p\", null, \"Check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/godot-academy/docs/metatags\"\n  }), \"metatags\"), \" docs to learn more.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Meta tags","excerpt":"Add Open Graph and Twitter meta tags to your blog.","rawBody":"---\ntitle: Meta tags\nexcerpt: Add Open Graph and Twitter meta tags to your blog.\n---\n\n**Step 1: Add the metatags package**\n\nTo enable metatags for `Post`, add the `@reflexjs/gatsby-plugin-metatags` package.\n\n```sh\nnpm i @reflexjs/gatsby-plugin-metatags\n```\n\n**Step 2: Enable metatags for the Post type**\n\n```js title=gatsby-config.js\nrequire(`dotenv`).config()\n\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    \"@reflexjs/gatsby-theme-post\",\n    // highlight-start\n    {\n      resolve: \"@reflexjs/gatsby-plugin-metatags\",\n      options: {\n        types: [\n          `Post`\n        ]\n      }\n    }\n    // highlight-end\n  ],\n}\n```\n\n**Step 3: Add metatags to post**\n\nEdit your post and add metatags.\n\n<Callout my=\"8\" pt=\"0\" pb=\"2\">\n\n**Note**: If you do not provide the `metatags` values, it will automatically be generated for you from the post title, description and image.\n\n</Callout >\n\n```md title=content/posts/2020-07-08-slug-of-post.mdx\n---\ntitle: Title of the Post\nexcerpt: A short description for this post.\ndate: 2020-07-08\nimage: cover-image-for-post.jpg\ncaption: Caption for the cover image\npublished: true\nfeatured: true\nauthor: Megan Morales\ntags:\n  - Writing\n  - Stories\n// highlight-start\nmetatags:\n  title: Title of the Post\n  description: A description for meta description\n  og:\n    title: A custom title for open graph.\n    description: Custom description for open graph.\n    image: Image for open graph.\n    type: article\n  twitter:\n    title: A custom title for Twitter cards.\n    description: Description for Twitter cards.\n    image: Custom image for Twitter cards.\n    card: summary or summary_large_image\n// highlight-end\n---\n\nPost content goes here.\n```\n\nCheck out the [metatags](/docs/metatags) docs to learn more.\n"}},"prev":{"__typename":"MdxDoc","id":"de93c5ba-29c1-540b-b612-9cbdb236dc0b","title":"Add a post","slug":"/docs/blog-post","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add a post\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To add a new post, create a new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdx\"), \" file under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/posts\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/posts/2020-07-08-slug-of-post.mdx\",\n    \"title\": \"content/posts/2020-07-08-slug-of-post.mdx\"\n  }), \"---\\ntitle: Title of the Post\\nexcerpt: A short description for this post.\\ndate: 2020-07-08\\nimage: cover-image-for-post.jpg\\ncaption: Caption for the cover image\\npublished: true\\nfeatured: true\\nauthor: Megan Morales // highlight-line\\ntags:\\n  - Writing\\n  - Stories\\n---\\n\\nPost content goes here.\\n\")), mdx(\"p\", null, \"If you open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog/2020-07-08-slug-of-post\"), \" in a browser, you should see your first post.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Add a post","rawBody":"---\ntitle: Add a post\n---\n\nTo add a new post, create a new `mdx` file under `content/posts`.\n\n```md title=content/posts/2020-07-08-slug-of-post.mdx\n---\ntitle: Title of the Post\nexcerpt: A short description for this post.\ndate: 2020-07-08\nimage: cover-image-for-post.jpg\ncaption: Caption for the cover image\npublished: true\nfeatured: true\nauthor: Megan Morales // highlight-line\ntags:\n  - Writing\n  - Stories\n---\n\nPost content goes here.\n```\n\nIf you open `/blog/2020-07-08-slug-of-post` in a browser, you should see your first post.\n"}},"next":{"__typename":"MdxDoc","id":"d93b8289-3d4d-5fb4-949c-a0658f6dc885","title":"Featured posts","slug":"/docs/blog-featured-posts","excerpt":"Add a featured posts section to a page.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Featured posts\",\n  \"excerpt\": \"Add a featured posts section to a page.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Block = makeShortcode(\"Block\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-post\"), \" provides a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"usePost\"), \" hook to easily retrieve, filter and render posts.\"), mdx(\"p\", null, \"Let's use this hook to get a list of featured posts in a block and use the block on the home page.\"), mdx(Block, {\n    src: \"video-card\",\n    url: \"https://www.youtube-nocookie.com/embed/KxdhGAw93QI\",\n    mdxType: \"Block\"\n  }), mdx(\"h2\", null, \"Create a block\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/featured-posts\",\n    \"title\": \"content/blocks/featured-posts\"\n  }), \"import { usePost } from \\\"@reflexjs/gatsby-theme-post\\\" // highlight-line\\n\\nexport const FeaturedPosts = () => {\\n  // highlight-start\\n  // This will return an array of all featured posts.\\n  const featuredPosts = usePost({ featured: true })\\n  // highlight-end\\n}\\n\")), mdx(\"h2\", null, \"Render the posts in a list\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/featured-posts\",\n    \"title\": \"content/blocks/featured-posts\"\n  }), \"import { usePost } from \\\"@reflexjs/gatsby-theme-post\\\"\\n\\nexport const FeaturedPosts = () => {\\n  const featuredPosts = usePost({ featured: true })\\n  // highlight-start\\n  return featuredPosts\\n    ? featuredPosts.map((post) => <A href={post.slug}>{post.title}</A>)\\n    : null\\n  // highlight-end\\n}\\n\")), mdx(\"h2\", null, \"Place block on page\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n<Block src=\\\"featured-posts\\\" /> // highlight-line\\n\")), mdx(\"h2\", null, \"Make block configurable\"), mdx(\"p\", null, \"Let's add a limit props to the block so that we can set how many featured posts to show.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/featured-posts\",\n    \"title\": \"content/blocks/featured-posts\"\n  }), \"import { usePost } from \\\"@reflexjs/gatsby-theme-post\\\"\\n\\n// highlight-start\\nexport const FeaturedPosts = ({ limit = 5 }) => {\\n  // highlight-end\\n  const featuredPosts = usePost({ featured: true })\\n  return featuredPosts\\n    ? featuredPosts\\n        .slice(0, limit) // highlight-line\\n        .map((post) => <A href={post.slug}>{post.title}</A>)\\n    : null\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n<Block src=\\\"featured-posts\\\" limit=\\\"3\\\" /> // highlight-line\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#create-a-block","title":"Create a block"},{"url":"#render-the-posts-in-a-list","title":"Render the posts in a list"},{"url":"#place-block-on-page","title":"Place block on page"},{"url":"#make-block-configurable","title":"Make block configurable"}],"timeToRead":1,"data":{"title":"Featured posts","excerpt":"Add a featured posts section to a page.","rawBody":"---\ntitle: Featured posts\nexcerpt: Add a featured posts section to a page.\n---\n\nThe `@reflexjs/gatsby-theme-post` provides a `usePost` hook to easily retrieve, filter and render posts.\n\nLet's use this hook to get a list of featured posts in a block and use the block on the home page.\n\n<Block\n  src=\"video-card\"\n  url=\"https://www.youtube-nocookie.com/embed/KxdhGAw93QI\"\n/>\n\n## Create a block\n\n```jsx title=content/blocks/featured-posts\nimport { usePost } from \"@reflexjs/gatsby-theme-post\" // highlight-line\n\nexport const FeaturedPosts = () => {\n  // highlight-start\n  // This will return an array of all featured posts.\n  const featuredPosts = usePost({ featured: true })\n  // highlight-end\n}\n```\n\n## Render the posts in a list\n\n```jsx title=content/blocks/featured-posts\nimport { usePost } from \"@reflexjs/gatsby-theme-post\"\n\nexport const FeaturedPosts = () => {\n  const featuredPosts = usePost({ featured: true })\n  // highlight-start\n  return featuredPosts\n    ? featuredPosts.map((post) => <A href={post.slug}>{post.title}</A>)\n    : null\n  // highlight-end\n}\n```\n\n## Place block on page\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n<Block src=\"featured-posts\" /> // highlight-line\n```\n\n## Make block configurable\n\nLet's add a limit props to the block so that we can set how many featured posts to show.\n\n```jsx title=content/blocks/featured-posts\nimport { usePost } from \"@reflexjs/gatsby-theme-post\"\n\n// highlight-start\nexport const FeaturedPosts = ({ limit = 5 }) => {\n  // highlight-end\n  const featuredPosts = usePost({ featured: true })\n  return featuredPosts\n    ? featuredPosts\n        .slice(0, limit) // highlight-line\n        .map((post) => <A href={post.slug}>{post.title}</A>)\n    : null\n}\n```\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n<Block src=\"featured-posts\" limit=\"3\" /> // highlight-line\n```\n"}}},"pageContext":{"id":"358a8e23-ad3d-5011-889e-e61848e8e346","prev":"de93c5ba-29c1-540b-b612-9cbdb236dc0b","next":"d93b8289-3d4d-5fb4-949c-a0658f6dc885"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}