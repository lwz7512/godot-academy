{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/pages-style-hero","result":{"data":{"doc":{"__typename":"MdxDoc","id":"77d41eaa-14e0-50fc-b19a-39a765869880","title":"Style the hero","slug":"/docs/pages-style-hero","excerpt":"Add styles to the hero block using style props.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Style the hero\",\n  \"excerpt\": \"Add styles to the hero block using style props.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Div = makeShortcode(\"Div\");\nvar Span = makeShortcode(\"Span\");\nvar Section = makeShortcode(\"Section\");\nvar Container = makeShortcode(\"Container\");\nvar Grid = makeShortcode(\"Grid\");\nvar H1 = makeShortcode(\"H1\");\nvar P = makeShortcode(\"P\");\nvar Image = makeShortcode(\"Image\");\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The hero we added does not look like much. We are going to style it using style props.\"), mdx(\"p\", null, \"Styling components in Reflex is as easy as adding attributes to the component, just like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTML\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n// highlight-start\\n\\n<Section p=\\\"4\\\">\\n  <Container>\\n    <Grid col=\\\"1fr 250px\\\" gap=\\\"8\\\" alignItems=\\\"center\\\">\\n      <Div>\\n        <H1 my=\\\"0\\\" fontSize=\\\"4xl\\\">\\n          Welcome to my site\\n        </H1>\\n        <P mt=\\\"4\\\">This is the a short description for the page</P>\\n      </Div>\\n      <Image src=\\\"placeholder.jpg\\\" />\\n    </Grid>\\n  </Container>\\n</Section>\\n\\n// highlight-end\\n\")), mdx(\"p\", null, \"The hero now looks like this.\"), mdx(Div, {\n    borderWidth: \"1px\",\n    mdxType: \"Div\"\n  }, mdx(Span, {\n    d: \"block\",\n    p: \"4\",\n    color: \"borderHover\",\n    mdxType: \"Span\"\n  }, \"Preview\"), mdx(Section, {\n    p: \"4\",\n    mdxType: \"Section\"\n  }, mdx(Container, {\n    mdxType: \"Container\"\n  }, mdx(Grid, {\n    col: \"1fr 250px\",\n    gap: \"8\",\n    alignItems: \"center\",\n    mdxType: \"Grid\"\n  }, mdx(Div, {\n    mdxType: \"Div\"\n  }, mdx(H1, {\n    my: \"0\",\n    fontSize: \"4xl\",\n    mdxType: \"H1\"\n  }, \"Welcome to my site\"), mdx(P, {\n    mt: \"4\",\n    mdxType: \"P\"\n  }, \"This is the a short description for the page\")), mdx(Image, {\n    src: \"placeholder.jpg\",\n    mdxType: \"Image\"\n  }))))), mdx(Callout, {\n    my: \"8\",\n    pt: \"0\",\n    pb: \"2\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, \"Learn more about styling component and creating themes in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/theming\"\n  }), \"theming documentation\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Style the hero","excerpt":"Add styles to the hero block using style props.","rawBody":"---\ntitle: Style the hero\nexcerpt: Add styles to the hero block using style props.\n---\n\nThe hero we added does not look like much. We are going to style it using style props.\n\nStyling components in Reflex is as easy as adding attributes to the component, just like `HTML`.\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n// highlight-start\n\n<Section p=\"4\">\n  <Container>\n    <Grid col=\"1fr 250px\" gap=\"8\" alignItems=\"center\">\n      <Div>\n        <H1 my=\"0\" fontSize=\"4xl\">\n          Welcome to my site\n        </H1>\n        <P mt=\"4\">This is the a short description for the page</P>\n      </Div>\n      <Image src=\"placeholder.jpg\" />\n    </Grid>\n  </Container>\n</Section>\n\n// highlight-end\n```\n\nThe hero now looks like this.\n\n<Div borderWidth=\"1px\">\n  <Span d=\"block\" p=\"4\" color=\"borderHover\">\n    Preview\n  </Span>\n  <Section p=\"4\">\n    <Container>\n      <Grid col=\"1fr 250px\" gap=\"8\" alignItems=\"center\">\n        <Div>\n          <H1 my=\"0\" fontSize=\"4xl\">\n            Welcome to my site\n          </H1>\n          <P mt=\"4\">This is the a short description for the page</P>\n        </Div>\n        <Image src=\"placeholder.jpg\" />\n      </Grid>\n    </Container>\n  </Section>\n</Div>\n\n<Callout my=\"8\" pt=\"0\" pb=\"2\">\n\nLearn more about styling component and creating themes in the [theming documentation](/docs/theming).\n\n</Callout>\n"}},"prev":{"__typename":"MdxDoc","id":"69d9414d-1b21-5658-9c56-153ed84a49d1","title":"Add a hero","slug":"/docs/pages-hero","excerpt":"Let's start by adding a hero to the page.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add a hero\",\n  \"excerpt\": \"Let's start by adding a hero to the page.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Div = makeShortcode(\"Div\");\nvar Span = makeShortcode(\"Span\");\nvar Section = makeShortcode(\"Section\");\nvar Container = makeShortcode(\"Container\");\nvar H1 = makeShortcode(\"H1\");\nvar P = makeShortcode(\"P\");\nvar Image = makeShortcode(\"Image\");\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"We are going to use \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/components\"\n  }), \"components\"), \" to build the hero.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n// highlight-start\\n\\n<Section>\\n  <Container>\\n    <H1>Welcome to my site</H1>\\n    <P>This is the a short description for the page</P>\\n    <Image src=\\\"placeholder.jpg\\\" />\\n  </Container>\\n</Section>\\n\\n// highlight-end\\n\")), mdx(\"p\", null, \"This will render a hero as shown below:\"), mdx(Div, {\n    borderWidth: \"1px\",\n    mdxType: \"Div\"\n  }, mdx(Span, {\n    d: \"block\",\n    p: \"4\",\n    color: \"borderHover\",\n    mdxType: \"Span\"\n  }, \"Preview\"), mdx(Section, {\n    mdxType: \"Section\"\n  }, mdx(Container, {\n    mdxType: \"Container\"\n  }, mdx(H1, {\n    mdxType: \"H1\"\n  }, \"Welcome to my site\"), mdx(P, {\n    mdxType: \"P\"\n  }, \"This is the a short description for the page\"), mdx(Image, {\n    src: \"placeholder.jpg\",\n    mdxType: \"Image\"\n  })))), mdx(Callout, {\n    my: \"8\",\n    pt: \"0\",\n    pb: \"2\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, \"Place the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"placeholder.jpg\"), \" image file inside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content/images\"), \" directory.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Add a hero","excerpt":"Let's start by adding a hero to the page.","rawBody":"---\ntitle: Add a hero\nexcerpt: Let's start by adding a hero to the page.\n---\n\nWe are going to use [components](/docs/components) to build the hero.\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n// highlight-start\n\n<Section>\n  <Container>\n    <H1>Welcome to my site</H1>\n    <P>This is the a short description for the page</P>\n    <Image src=\"placeholder.jpg\" />\n  </Container>\n</Section>\n\n// highlight-end\n```\n\nThis will render a hero as shown below:\n\n<Div borderWidth=\"1px\">\n  <Span d=\"block\" p=\"4\" color=\"borderHover\">\n    Preview\n  </Span>\n  <Section>\n    <Container>\n      <H1>Welcome to my site</H1>\n      <P>This is the a short description for the page</P>\n      <Image src=\"placeholder.jpg\" />\n    </Container>\n  </Section>\n</Div>\n\n<Callout my=\"8\" pt=\"0\" pb=\"2\">\n\nPlace the _placeholder.jpg_ image file inside the `/content/images` directory.\n\n</Callout>\n"}},"next":{"__typename":"MdxDoc","id":"2e44b2f5-e718-5f75-9e6e-3441c03f99ef","title":"Add a block","slug":"/docs/pages-block","excerpt":"Using blocks in Reflex allows you to extract and group components into smaller re-usable chunks.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add a block\",\n  \"excerpt\": \"Using blocks in Reflex allows you to extract and group components into smaller re-usable chunks.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To move the hero we created into a block, start by adding a new block under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content/blocks/hero.mdx\"), \" and move the\\nhero there.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/blocks/hero.mdx\",\n    \"title\": \"content/blocks/hero.mdx\"\n  }), \"<Section p=\\\"4\\\">\\n  <Container>\\n    <Grid col=\\\"1fr 250px\\\" gap=\\\"8\\\" alignItems=\\\"center\\\">\\n      <Div>\\n        <H1 my=\\\"0\\\" fontSize=\\\"4xl\\\">\\n          Welcome to my site\\n        </H1>\\n        <P mt=\\\"4\\\">This is the a short description for the page</P>\\n      </Div>\\n      <Image src=\\\"placeholder.jpg\\\" />\\n    </Grid>\\n  </Container>\\n</Section>\\n\")), mdx(\"p\", null, \"You can now use the new block on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"about.mdx\"), \" page using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Block\"), \" component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n<Block src=\\\"hero\\\" /> // highlight-line\\n\")), mdx(Callout, {\n    my: \"8\",\n    pt: \"0\",\n    pb: \"2\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, \"When adding a block to a page, you can omit the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content/blocks\"), \" path prefix. Reflex will automatically resolve the block using the block name.\")), mdx(\"p\", null, \"Blocks can also be nested in sub-directories and used as follows:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Block src=\\\"about/contact\\\" />\"), \" will display the block found at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content/blocks/about/contact\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"site\\n  \\u2514\\u2500\\u2500 content\\n      \\u2514\\u2500\\u2500 blocks\\n          \\u2514\\u2500\\u2500 about\\n              \\u2514\\u2500\\u2500 contact.mdx\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Add a block","excerpt":"Using blocks in Reflex allows you to extract and group components into smaller re-usable chunks.","rawBody":"---\ntitle: Add a block\nexcerpt: Using blocks in Reflex allows you to extract and group components into smaller re-usable chunks.\n---\n\nTo move the hero we created into a block, start by adding a new block under `/content/blocks/hero.mdx` and move the\nhero there.\n\n```md title=content/blocks/hero.mdx\n<Section p=\"4\">\n  <Container>\n    <Grid col=\"1fr 250px\" gap=\"8\" alignItems=\"center\">\n      <Div>\n        <H1 my=\"0\" fontSize=\"4xl\">\n          Welcome to my site\n        </H1>\n        <P mt=\"4\">This is the a short description for the page</P>\n      </Div>\n      <Image src=\"placeholder.jpg\" />\n    </Grid>\n  </Container>\n</Section>\n```\n\nYou can now use the new block on the `about.mdx` page using the `Block` component.\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n<Block src=\"hero\" /> // highlight-line\n```\n\n<Callout my=\"8\" pt=\"0\" pb=\"2\">\n\nWhen adding a block to a page, you can omit the `/content/blocks` path prefix. Reflex will automatically resolve the block using the block name.\n\n</Callout>\n\nBlocks can also be nested in sub-directories and used as follows:\n\n`<Block src=\"about/contact\" />` will display the block found at `/content/blocks/about/contact`.\n\n```\nsite\n  └── content\n      └── blocks\n          └── about\n              └── contact.mdx\n```\n"}}},"pageContext":{"id":"77d41eaa-14e0-50fc-b19a-39a765869880","prev":"69d9414d-1b21-5658-9c56-153ed84a49d1","next":"2e44b2f5-e718-5f75-9e6e-3441c03f99ef"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}