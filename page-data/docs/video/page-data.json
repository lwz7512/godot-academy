{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/video","result":{"data":{"doc":{"__typename":"MdxDoc","id":"ce6e796e-2f42-5b38-9a21-56fcc3c0652c","title":"Video","slug":"/docs/video","excerpt":"Add a video section to your site.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Video\",\n  \"excerpt\": \"Add a video section to your site.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-video\"), \" package to add a video section to your site.\"), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1: add dependencies\")), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-video\"), \" package.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i @reflexjs/gatsby-theme-video\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2: enable the plugin\")), mdx(\"p\", null, \"Edit your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file and add the plugin.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"require(`dotenv`).config()\\n\\nmodule.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    \\\"@reflexjs/gatsby-theme-video\\\" // highlight-line\\n  ],\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3: run your site\")), mdx(\"p\", null, \"Start the development server.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"gatsby develop\\n\")), mdx(\"p\", null, \"This will add the following directories to your site.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"site\\n\\u2514\\u2500\\u2500 content\\n    \\u2514\\u2500\\u2500 blocks\\n    \\u251C\\u2500\\u2500 images\\n    \\u251C\\u2500\\u2500 navs\\n    \\u251C\\u2500\\u2500 pages\\n    \\u2514\\u2500\\u2500 videos\\n        \\u2514\\u2500\\u2500 . <-- Place videos here. // highlight-line\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#installation","title":"Installation"}],"timeToRead":1,"data":{"title":"Video","excerpt":"Add a video section to your site.","rawBody":"---\ntitle: Video\nexcerpt: Add a video section to your site.\n---\n\nUse the `@reflexjs/gatsby-theme-video` package to add a video section to your site.\n\n## Installation\n\n**Step 1: add dependencies**\n\nAdd the `@reflexjs/gatsby-theme-video` package.\n\n```sh\nnpm i @reflexjs/gatsby-theme-video\n```\n\n**Step 2: enable the plugin**\n\nEdit your `gatsby-config.js` file and add the plugin.\n\n```js title=gatsby-config.js\nrequire(`dotenv`).config()\n\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    \"@reflexjs/gatsby-theme-video\" // highlight-line\n  ],\n}\n```\n\n**Step 3: run your site**\n\nStart the development server.\n\n```sh\ngatsby develop\n```\n\nThis will add the following directories to your site.\n\n```\nsite\n└── content\n    └── blocks\n    ├── images\n    ├── navs\n    ├── pages\n    └── videos\n        └── . <-- Place videos here. // highlight-line\n```\n"}},"prev":{"__typename":"MdxDoc","id":"902286fb-6046-56db-9e6d-93b981bce1b0","title":"Recipes","slug":"/docs/blog-recipes","excerpt":"Helpful guides and code snippets to customize your blog.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recipes\",\n  \"excerpt\": \"Helpful guides and code snippets to customize your blog.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Add Disqus\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1: Add disqus-react\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i disqus-react\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2: Configure .env.\")), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env.example\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".env\"), \".\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GATSBY_DISQUS_NAME=DISQUS_SITE_NAME\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-text\",\n    \"metastring\": \"title=.env\",\n    \"title\": \".env\"\n  }), \"GATSBY_DISQUS_NAME=DISQUS_SITE_NAME\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3: Update post.js\")), mdx(\"p\", null, \"To add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DiscussionEmbed\"), \" element to the blog post, shadow the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post.js\"), \" file and add it as follows (note the highlighted lines):\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-post/post.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-post/post.js\"\n  }), \"import * as React from \\\"react\\\"\\nimport { MDXRenderer, Link } from \\\"@reflexjs/gatsby-theme-core\\\"\\nimport { Article, Container, H1, Div, P, Flexbox } from \\\"@reflexjs/components\\\"\\nimport { Image } from \\\"@reflexjs/gatsby-plugin-image\\\"\\nimport { PostMeta } from \\\"@reflexjs/gatsby-theme-post\\\" // highlight-line\\nimport { DiscussionEmbed } from \\\"disqus-react\\\" // highlight-line\\n\\nexport const Post = ({\\n  title,\\n  excerpt,\\n  body,\\n  image,\\n  caption,\\n  date,\\n  datetime,\\n  author,\\n  timeToRead,\\n  tags,\\n  slug, // highlight-line\\n}) => (\\n  <Article py=\\\"8|12|14\\\">\\n    // highlight-start\\n    <Container maxW=\\\"900px\\\" mt=\\\"20\\\">\\n      <DiscussionEmbed\\n        shortname={process.env.GATSBY_DISQUS_NAME}\\n        config={{ identifier: slug, title }}\\n      />\\n    </Container>\\n    // highlight-end\\n  </Article>\\n)\\n\")), mdx(\"h2\", null, \"Custom slug\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slugResolver\"), \" option to override the generated slug.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"const { toSlug } = require(\\\"@reflexjs/gatsby-helpers\\\") // highlight-line\\n\\nmodule.exports = {\\n  plugins: [\\n    `@reflexjs/gatsby-theme-base`,\\n    {\\n      resolve: `@reflexjs/gatsby-theme-post`,\\n      // highlight-start\\n      options: {\\n        slugResolver: (node, parent, basePath) =>\\n          `${toSlug(node.frontmatter.title)}.html`,\\n      },\\n      // highlight-end\\n    },\\n  ],\\n}\\n\")), mdx(\"h2\", null, \"Author block\"), mdx(\"p\", null, \"Add an author block to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post.js\"), \" component.\"), mdx(\"p\", null, \"Shadow \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post.js\"), \" and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useProfile\"), \" hook to retrieve the post author.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-post/post.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-post/post.js\"\n  }), \"import * as React from \\\"react\\\"\\nimport { MDXRenderer, Link } from \\\"@reflexjs/gatsby-theme-core\\\"\\nimport { Article, Container, H1, Div, P, Flexbox } from \\\"@reflexjs/components\\\"\\nimport { Image } from \\\"@reflexjs/gatsby-plugin-image\\\"\\nimport { PostMeta } from \\\"@reflexjs/gatsby-theme-post\\\" // highlight-line\\nimport { useProfile } from \\\"@reflexjs/gatsby-theme-profile\\\" // highlight-line\\n\\nexport const Post = ({\\n  title,\\n  excerpt,\\n  body,\\n  image,\\n  caption,\\n  date,\\n  datetime,\\n  author,\\n  timeToRead,\\n  tags,\\n}) => {\\n  const [authorProfile] = useProfile(author) // highlight-line\\n  return (\\n    <Article py=\\\"8|12|14\\\">\\n      // highlight-start\\n      <Div>\\n        <Image src={authorProfile.picture} />\\n        <H4>{authorProfile.name}</H4>\\n        <P>{authorProfile.excerpt}</P>\\n      </Div>\\n      // highlight-end\\n    </Article>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Previous and Next Pager\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post-template\"), \" automatically renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post-header\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post-footer\"), \" block. Theses blocks receive the same\\nprops as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post.js\"), \" file.\"), mdx(\"p\", null, \"We can use this to render a previous and next pager without having to shadow \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"post.js\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"content/blocks/post-footer.mdx\"), \" block with the following:\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/post-footer.mdx\",\n    \"title\": \"content/blocks/post-footer.mdx\"\n  }), \"export const PostFooter = ({ previous, next }) => (\\n  <Container maxW=\\\"null|null|null|900px\\\">\\n    <Flexbox justifyContent=\\\"space-between\\\">\\n      {previous && (\\n        <PagerLink href={previous.slug}>\\n          <Span d=\\\"flex\\\" alignItems=\\\"center\\\">\\n            <Icon name=\\\"arrow-left\\\" mr=\\\"2\\\" /> Previous\\n          </Span>\\n          <PagerTitle title={previous.title} />\\n        </PagerLink>\\n      )}\\n      {next && (\\n        <PagerLink\\n          href={next.slug}\\n          ml=\\\"auto\\\"\\n          textAlign=\\\"right\\\"\\n          alignItems=\\\"flex-end\\\"\\n        >\\n          <Span d=\\\"flex\\\" alignItems=\\\"center\\\">\\n            Next <Icon name=\\\"arrow-right\\\" ml=\\\"2\\\" />\\n          </Span>\\n          <PagerTitle title={next.title} />\\n        </PagerLink>\\n      )}\\n    </Flexbox>\\n  </Container>\\n)\\n\\nexport const PagerLink = ({ children, ...props }) => (\\n  <ButtonLink\\n    d=\\\"flex\\\"\\n    flexDirection=\\\"column\\\"\\n    alignItems=\\\"flex-start\\\"\\n    bg=\\\"transparent\\\"\\n    rounded=\\\"md\\\"\\n    border=\\\"0\\\"\\n    p=\\\"4\\\"\\n    w=\\\"40%\\\"\\n    hoverBg=\\\"muted\\\"\\n    {...props}\\n  >\\n    {children}\\n  </ButtonLink>\\n)\\n\\nexport const PagerTitle = ({ title }) => (\\n  <P\\n    d=\\\"none|none|block\\\"\\n    mt=\\\"4\\\"\\n    mb=\\\"0\\\"\\n    fontWeight=\\\"semibold\\\"\\n    lineHeight=\\\"normal\\\"\\n  >\\n    {title}\\n  </P>\\n)\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#add-disqus","title":"Add Disqus"},{"url":"#custom-slug","title":"Custom slug"},{"url":"#author-block","title":"Author block"},{"url":"#previous-and-next-pager","title":"Previous and Next Pager"}],"timeToRead":1,"data":{"title":"Recipes","excerpt":"Helpful guides and code snippets to customize your blog.","rawBody":"---\ntitle: Recipes\nexcerpt: Helpful guides and code snippets to customize your blog.\n---\n\n## Add Disqus\n\n**Step 1: Add disqus-react**\n\n```sh\nnpm i disqus-react\n```\n\n**Step 2: Configure .env.**\n\n1. Copy `.env.example` to `.env`.\n2. Add `GATSBY_DISQUS_NAME=DISQUS_SITE_NAME`\n\n```text title=.env\nGATSBY_DISQUS_NAME=DISQUS_SITE_NAME\n```\n\n**Step 3: Update post.js**\n\nTo add the `DiscussionEmbed` element to the blog post, shadow the `post.js` file and add it as follows (note the highlighted lines):\n\n```jsx title=src/@reflexjs/gatsby-theme-post/post.js\nimport * as React from \"react\"\nimport { MDXRenderer, Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Article, Container, H1, Div, P, Flexbox } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\nimport { PostMeta } from \"@reflexjs/gatsby-theme-post\" // highlight-line\nimport { DiscussionEmbed } from \"disqus-react\" // highlight-line\n\nexport const Post = ({\n  title,\n  excerpt,\n  body,\n  image,\n  caption,\n  date,\n  datetime,\n  author,\n  timeToRead,\n  tags,\n  slug, // highlight-line\n}) => (\n  <Article py=\"8|12|14\">\n    // highlight-start\n    <Container maxW=\"900px\" mt=\"20\">\n      <DiscussionEmbed\n        shortname={process.env.GATSBY_DISQUS_NAME}\n        config={{ identifier: slug, title }}\n      />\n    </Container>\n    // highlight-end\n  </Article>\n)\n```\n\n## Custom slug\n\nUse the `slugResolver` option to override the generated slug.\n\n```js title=gatsby-config.js\nconst { toSlug } = require(\"@reflexjs/gatsby-helpers\") // highlight-line\n\nmodule.exports = {\n  plugins: [\n    `@reflexjs/gatsby-theme-base`,\n    {\n      resolve: `@reflexjs/gatsby-theme-post`,\n      // highlight-start\n      options: {\n        slugResolver: (node, parent, basePath) =>\n          `${toSlug(node.frontmatter.title)}.html`,\n      },\n      // highlight-end\n    },\n  ],\n}\n```\n\n## Author block\n\nAdd an author block to your `post.js` component.\n\nShadow `post.js` and use the `useProfile` hook to retrieve the post author.\n\n```jsx title=src/@reflexjs/gatsby-theme-post/post.js\nimport * as React from \"react\"\nimport { MDXRenderer, Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Article, Container, H1, Div, P, Flexbox } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\nimport { PostMeta } from \"@reflexjs/gatsby-theme-post\" // highlight-line\nimport { useProfile } from \"@reflexjs/gatsby-theme-profile\" // highlight-line\n\nexport const Post = ({\n  title,\n  excerpt,\n  body,\n  image,\n  caption,\n  date,\n  datetime,\n  author,\n  timeToRead,\n  tags,\n}) => {\n  const [authorProfile] = useProfile(author) // highlight-line\n  return (\n    <Article py=\"8|12|14\">\n      // highlight-start\n      <Div>\n        <Image src={authorProfile.picture} />\n        <H4>{authorProfile.name}</H4>\n        <P>{authorProfile.excerpt}</P>\n      </Div>\n      // highlight-end\n    </Article>\n  )\n}\n```\n\n## Previous and Next Pager\n\nThe `post-template` automatically renders a `post-header` and a `post-footer` block. Theses blocks receive the same\nprops as the `post.js` file.\n\nWe can use this to render a previous and next pager without having to shadow `post.js`.\n\n**Create a `content/blocks/post-footer.mdx` block with the following:**\n\n```jsx title=content/blocks/post-footer.mdx\nexport const PostFooter = ({ previous, next }) => (\n  <Container maxW=\"null|null|null|900px\">\n    <Flexbox justifyContent=\"space-between\">\n      {previous && (\n        <PagerLink href={previous.slug}>\n          <Span d=\"flex\" alignItems=\"center\">\n            <Icon name=\"arrow-left\" mr=\"2\" /> Previous\n          </Span>\n          <PagerTitle title={previous.title} />\n        </PagerLink>\n      )}\n      {next && (\n        <PagerLink\n          href={next.slug}\n          ml=\"auto\"\n          textAlign=\"right\"\n          alignItems=\"flex-end\"\n        >\n          <Span d=\"flex\" alignItems=\"center\">\n            Next <Icon name=\"arrow-right\" ml=\"2\" />\n          </Span>\n          <PagerTitle title={next.title} />\n        </PagerLink>\n      )}\n    </Flexbox>\n  </Container>\n)\n\nexport const PagerLink = ({ children, ...props }) => (\n  <ButtonLink\n    d=\"flex\"\n    flexDirection=\"column\"\n    alignItems=\"flex-start\"\n    bg=\"transparent\"\n    rounded=\"md\"\n    border=\"0\"\n    p=\"4\"\n    w=\"40%\"\n    hoverBg=\"muted\"\n    {...props}\n  >\n    {children}\n  </ButtonLink>\n)\n\nexport const PagerTitle = ({ title }) => (\n  <P\n    d=\"none|none|block\"\n    mt=\"4\"\n    mb=\"0\"\n    fontWeight=\"semibold\"\n    lineHeight=\"normal\"\n  >\n    {title}\n  </P>\n)\n```\n"}},"next":{"__typename":"MdxDoc","id":"65b31ebd-0c7b-560a-9431-b1d340c81e4d","title":"Add a video","slug":"/docs/video-type","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add a video\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To add a new video, create a new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdx\"), \" file under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/videos\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/videos/slug-of-video.mdx\",\n    \"title\": \"content/videos/slug-of-video.mdx\"\n  }), \"---\\ntitle: Title of the Video\\nexcerpt: A short description for this Video.\\nurl: https://www.youtube.com/watch?v=7GXlCxSFITI\\nprovider: youtube\\ndate: 2020-07-08\\nthumbnail: thumbnail-for-video.jpg\\npublished: true\\nfeatured: true\\n---\\n\\nVideo content goes here.\\n\")), mdx(\"p\", null, \"If you open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/videos/slug-of-video\"), \" in a browser, you should see your first Video.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Add a video","rawBody":"---\ntitle: Add a video\n---\n\nTo add a new video, create a new `mdx` file under `content/videos`.\n\n```md title=content/videos/slug-of-video.mdx\n---\ntitle: Title of the Video\nexcerpt: A short description for this Video.\nurl: https://www.youtube.com/watch?v=7GXlCxSFITI\nprovider: youtube\ndate: 2020-07-08\nthumbnail: thumbnail-for-video.jpg\npublished: true\nfeatured: true\n---\n\nVideo content goes here.\n```\n\nIf you open `/videos/slug-of-video` in a browser, you should see your first Video.\n"}}},"pageContext":{"id":"ce6e796e-2f42-5b38-9a21-56fcc3c0652c","prev":"902286fb-6046-56db-9e6d-93b981bce1b0","next":"65b31ebd-0c7b-560a-9431-b1d340c81e4d"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}