{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/editor","result":{"data":{"doc":{"__typename":"MdxDoc","id":"379b5c8c-522a-542e-b76d-a8a3f26cf909","title":"Configure your editor","slug":"/docs/editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configure your editor\",\n  \"excerpt\": \"Some helpful settings and extensions to make developing with Reflex easier.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"VS Code\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx\"\n  }), \"VSCode MDX\"), \" extension to add language support for MDX.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ESLint\"), \" support for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".md\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" extensions.\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=.vscode/settings.json\",\n    \"title\": \".vscode/settings.json\"\n  }), \"{\\n  \\\"editor.codeActionsOnSave\\\": {\\n    \\\"source.fixAll\\\": true\\n  },\\n  \\\"eslint.options\\\": {\\n    \\\"extensions\\\": [\\\".js\\\", \\\".jsx\\\", \\\".md\\\", \\\".mdx\\\", \\\".ts\\\", \\\".tsx\\\"] // highlight-line\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#vs-code","title":"VS Code"}],"timeToRead":1,"data":{"title":"Configure your editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","rawBody":"---\ntitle: Configure your editor\nexcerpt: Some helpful settings and extensions to make developing with Reflex easier.\n---\n\n## VS Code\n\n1. Install the [VSCode MDX](https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx) extension to add language support for MDX.\n\n2. Enable `ESLint` support for `.md` and `.mdx` extensions.\n\n```js title=.vscode/settings.json\n{\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll\": true\n  },\n  \"eslint.options\": {\n    \"extensions\": [\".js\", \".jsx\", \".md\", \".mdx\", \".ts\", \".tsx\"] // highlight-line\n  }\n}\n```\n"}},"prev":{"__typename":"MdxDoc","id":"4530dcfe-adb9-57c8-a204-29b75b9bbada","title":"Configuration","slug":"/docs/configuration","excerpt":"Configure your site name, description, plugins and themes.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configuration\",\n  \"excerpt\": \"Configure your site name, description, plugins and themes.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Hr = makeShortcode(\"Hr\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"gatsby-config.js\"), mdx(\"p\", null, \"Configuration options for a Gatsby (and Reflex) site are placed in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file at the root of the project folder.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\\"@reflexjs/gatsby-theme-base\\\"],\\n}\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"siteMetadata\"), mdx(\"p\", null, \"The siteMetadata is for common config that is used across the site. The site name (title), description and other site related\\nconfig are stored in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \".\"), mdx(\"p\", null, \"Reflex provides the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSiteMetadata\"), \" helper hook to retrieve the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \" config.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/copyright.mdx\",\n    \"title\": \"content/blocks/copyright.mdx\"\n  }), \"import { useSiteMetadata } from \\\"@reflexjs/gatsby-theme-core\\\" // highlight-line\\n\\nexport const Copyright = ({ ...props }) => {\\n  const { title } = useSiteMetadata() // highlight-line\\n  return (\\n    <P fontSize=\\\"sm\\\" {...props}>\\n      \\xA9 {new Date().getFullYear()} {title}\\n    </P>\\n  )\\n}\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"plugins\"), mdx(\"p\", null, \"This is where you define your site plugins and themes. Plugins can be listed by name or with options.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  // highlight-start\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    {\\n      resolve: \\\"@reflexjs/gatsby-theme-post\\\",\\n      options: {\\n        basePath: \\\"/the-blog\\\",\\n      }\\n    }\\n  ],\\n  // highlight-end\\n}\\n\")), mdx(\"p\", null, \"You can read more on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/gatsby-config/\"\n  }), \"Gatsby docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#gatsby-configjs","title":"gatsby-config.js","items":[{"url":"#sitemetadata","title":"siteMetadata"},{"url":"#plugins","title":"plugins"}]}],"timeToRead":1,"data":{"title":"Configuration","excerpt":"Configure your site name, description, plugins and themes.","rawBody":"---\ntitle: Configuration\nexcerpt: Configure your site name, description, plugins and themes.\n---\n\n## gatsby-config.js\n\nConfiguration options for a Gatsby (and Reflex) site are placed in a `gatsby-config.js` file at the root of the project folder.\n\n```js title=gatsby-config.js\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\"@reflexjs/gatsby-theme-base\"],\n}\n```\n\n<Hr mt=\"8\" />\n\n### siteMetadata\n\nThe siteMetadata is for common config that is used across the site. The site name (title), description and other site related\nconfig are stored in the `siteMetadata`.\n\nReflex provides the `useSiteMetadata` helper hook to retrieve the `siteMetadata` config.\n\n```jsx title=content/blocks/copyright.mdx\nimport { useSiteMetadata } from \"@reflexjs/gatsby-theme-core\" // highlight-line\n\nexport const Copyright = ({ ...props }) => {\n  const { title } = useSiteMetadata() // highlight-line\n  return (\n    <P fontSize=\"sm\" {...props}>\n      © {new Date().getFullYear()} {title}\n    </P>\n  )\n}\n```\n\n<Hr mt=\"8\" />\n\n### plugins\n\nThis is where you define your site plugins and themes. Plugins can be listed by name or with options.\n\n```js title=gatsby-config.js\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  // highlight-start\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    {\n      resolve: \"@reflexjs/gatsby-theme-post\",\n      options: {\n        basePath: \"/the-blog\",\n      }\n    }\n  ],\n  // highlight-end\n}\n```\n\nYou can read more on the `gatsby-config.js` file in the [Gatsby docs](https://www.gatsbyjs.org/docs/gatsby-config/).\n"}},"next":{"__typename":"MdxDoc","id":"b49d8145-caa1-5f7f-8f2f-e94455d88387","title":"MDX","slug":"/docs/mdx","excerpt":"MDX is the Markdown format extended to allows JSX components.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MDX\",\n  \"excerpt\": \"MDX is the Markdown format extended to allows JSX components.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Reflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\"), mdx(\"h2\", null, \"Components\"), mdx(\"p\", null, \"Components can be imported or written inline with your Markdown content.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\nimport { Example } from \\\"package\\\" // highlight-line\\n\\n# Heading 1\\n\\nA paragraph officiis labore excepturi nam.\\n\\n<Block src=\\\"hero\\\" /> // highlight-line\\n\\nAnother paragraph.\\n\\n<Button>A button</Button> component.\\n\")), mdx(\"h2\", null, \"Styling\"), mdx(\"p\", null, \"Components in MDX files can be styled using style props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: A page\\n---\\n\\n<P color=\\\"primary\\\">A paragraph in primary color</P>\\n\\n<H3 mb=\\\"4\\\">A heading with margin bottom</H3>\\n\")), mdx(\"p\", null, \"See the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/godot-academy/theme\"\n  }), \"Theme reference\"), \" for style props values.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#components","title":"Components"},{"url":"#styling","title":"Styling"}],"timeToRead":1,"data":{"title":"MDX","excerpt":"MDX is the Markdown format extended to allows JSX components.","rawBody":"---\ntitle: MDX\nexcerpt: MDX is the Markdown format extended to allows JSX components.\n---\n\nReflex uses MDX for content. Pages, blocks, posts, and navs are all built using MDX. You can import components, such as blocks, and embed them within your content.\n\n## Components\n\nComponents can be imported or written inline with your Markdown content.\n\n```jsx\n---\ntitle: A page\n---\n\nimport { Example } from \"package\" // highlight-line\n\n# Heading 1\n\nA paragraph officiis labore excepturi nam.\n\n<Block src=\"hero\" /> // highlight-line\n\nAnother paragraph.\n\n<Button>A button</Button> component.\n```\n\n## Styling\n\nComponents in MDX files can be styled using style props.\n\n```jsx\n---\ntitle: A page\n---\n\n<P color=\"primary\">A paragraph in primary color</P>\n\n<H3 mb=\"4\">A heading with margin bottom</H3>\n```\n\nSee the [Theme reference](/theme) for style props values.\n"}}},"pageContext":{"id":"379b5c8c-522a-542e-b76d-a8a3f26cf909","prev":"4530dcfe-adb9-57c8-a204-29b75b9bbada","next":"b49d8145-caa1-5f7f-8f2f-e94455d88387"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}