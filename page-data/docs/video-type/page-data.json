{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/video-type","result":{"data":{"doc":{"__typename":"MdxDoc","id":"65b31ebd-0c7b-560a-9431-b1d340c81e4d","title":"Add a video","slug":"/docs/video-type","excerpt":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Add a video\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To add a new video, create a new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mdx\"), \" file under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/videos\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/videos/slug-of-video.mdx\",\n    \"title\": \"content/videos/slug-of-video.mdx\"\n  }), \"---\\ntitle: Title of the Video\\nexcerpt: A short description for this Video.\\nurl: https://www.youtube.com/watch?v=7GXlCxSFITI\\nprovider: youtube\\ndate: 2020-07-08\\nthumbnail: thumbnail-for-video.jpg\\npublished: true\\nfeatured: true\\n---\\n\\nVideo content goes here.\\n\")), mdx(\"p\", null, \"If you open \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/videos/slug-of-video\"), \" in a browser, you should see your first Video.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Add a video","rawBody":"---\ntitle: Add a video\n---\n\nTo add a new video, create a new `mdx` file under `content/videos`.\n\n```md title=content/videos/slug-of-video.mdx\n---\ntitle: Title of the Video\nexcerpt: A short description for this Video.\nurl: https://www.youtube.com/watch?v=7GXlCxSFITI\nprovider: youtube\ndate: 2020-07-08\nthumbnail: thumbnail-for-video.jpg\npublished: true\nfeatured: true\n---\n\nVideo content goes here.\n```\n\nIf you open `/videos/slug-of-video` in a browser, you should see your first Video.\n"}},"prev":{"__typename":"MdxDoc","id":"b6854f1f-0d85-5316-979a-3ceb007a01a6","title":"Configuration","slug":"/docs/video-configuration","excerpt":"Configure your videos using theme options.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configuration\",\n  \"excerpt\": \"Configure your videos using theme options.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Hr = makeShortcode(\"Hr\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-video\"), \" package accepts the following options to make it easy to customize your videos.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    // highlight-start\\n    {\\n      resolve: `@reflexjs/gatsby-theme-video`,\\n      options: {\\n        contentPath: \\\"content/videos\\\",\\n        basePath: \\\"/videos\\\",\\n        videosPerPage: 10,\\n        pageQuery: null,\\n        slugResolver: null,\\n        providers: []\\n      }\\n    }\\n    // highlight-end\\n  ],\\n}\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"contentPath\"), mdx(\"p\", null, \"Update the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contentPath\"), \" if you need to place your videos in a different location (defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/content/videos\"), \").\"), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"basePath\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"basePath\"), \" sets the path for the videos landing page, the tags pages and the video pages. All video pages are prefixed by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"basePath\"), \".\"), mdx(\"p\", null, \"See \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slugResolver\"), \" if you need more flexibility.\"), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"videosPerPage\"), mdx(\"p\", null, \"The number of videos to use to paginate videos pages.\"), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"pageQuery\"), mdx(\"p\", null, \"The GraphQL query to use to create the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/videos\"), \" page. You can use this option to filter out or customize the videos that are displayed on the page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"Filter out all unpublished videos tagged with \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Example\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"pageQuery: `\\n  query {\\n    allVideo(sort: {fields: date, order: DESC}, filter: { published: { eq: false } }) {\\n      nodes {\\n        id\\n        slug\\n      }\\n    }\\n  }\\n`,\\n},\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"slugResolver\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slugResolver\"), \" option to have more flexibility on how video slugs are created.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example:\")), mdx(\"p\", null, \"This will remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/videos\"), \" prefix and add a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".html\"), \" suffix to all video slugs.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"const { toSlug } = require(\\\"@reflexjs/gatsby-helpers\\\") // highlight-line\\n\\nmodule.exports = {\\n  plugins: [\\n    `@reflexjs/gatsby-theme-base`,\\n    {\\n      resolve: `@reflexjs/gatsby-theme-video`,\\n      // highlight-start\\n      options: {\\n        slugResolver: (node, parent, basePath) =>\\n          `${toSlug(node.frontmatter.title)}.html`,\\n      },\\n      // highlight-end\\n    },\\n  ],\\n}\\n\")), mdx(\"h3\", null, \"providers\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"providers\"), \" options to define additional video providers. Youtube and Vimeo are supported by the package.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"module.exports = {\\n  plugins: [\\n    `@reflexjs/gatsby-theme-base`,\\n    {\\n      resolve: `@reflexjs/gatsby-theme-video`,\\n      // highlight-start\\n      options: {\\n        providers: [\\n          {\\n            name: \\\"youtube\\\",\\n            // Returns the embed url.\\n            embedUrl: ({ videoId }) =>\\n              `https://www.youtube.com/embed/${videoId}`,\\n            // Callback to retrieve the video id from the url.\\n            videoId: ({ url }) =>\\n              url\\n                .match(\\n                  /^.*((youtu.be\\\\/)|(v\\\\/)|(\\\\/u\\\\/\\\\w\\\\/)|(embed\\\\/)|(watch\\\\?))\\\\??v?=?([^#&?]*).*/i\\n                )\\n                ?.pop(),\\n          },\\n        ],\\n      },\\n      // highlight-end\\n    },\\n  ],\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#contentpath","title":"contentPath"},{"url":"#basepath","title":"basePath"},{"url":"#videosperpage","title":"videosPerPage"},{"url":"#pagequery","title":"pageQuery"},{"url":"#slugresolver","title":"slugResolver"},{"url":"#providers","title":"providers"}],"timeToRead":1,"data":{"title":"Configuration","excerpt":"Configure your videos using theme options.","rawBody":"---\ntitle: Configuration\nexcerpt: Configure your videos using theme options.\n---\n\nThe `@reflexjs/gatsby-theme-video` package accepts the following options to make it easy to customize your videos.\n\n```js title=gatsby-config.js\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    // highlight-start\n    {\n      resolve: `@reflexjs/gatsby-theme-video`,\n      options: {\n        contentPath: \"content/videos\",\n        basePath: \"/videos\",\n        videosPerPage: 10,\n        pageQuery: null,\n        slugResolver: null,\n        providers: []\n      }\n    }\n    // highlight-end\n  ],\n}\n```\n\n<Hr mt=\"8\" />\n\n### contentPath\n\nUpdate the `contentPath` if you need to place your videos in a different location (defaults to `/content/videos`).\n\n<Hr mt=\"8\" />\n\n### basePath\n\nThe `basePath` sets the path for the videos landing page, the tags pages and the video pages. All video pages are prefixed by the `basePath`.\n\nSee `slugResolver` if you need more flexibility.\n\n<Hr mt=\"8\" />\n\n### videosPerPage\n\nThe number of videos to use to paginate videos pages.\n\n<Hr mt=\"8\" />\n\n### pageQuery\n\nThe GraphQL query to use to create the `/videos` page. You can use this option to filter out or customize the videos that are displayed on the page.\n\n**Example:**\n\nFilter out all unpublished videos tagged with _Example_.\n\n```js\npageQuery: `\n  query {\n    allVideo(sort: {fields: date, order: DESC}, filter: { published: { eq: false } }) {\n      nodes {\n        id\n        slug\n      }\n    }\n  }\n`,\n},\n```\n\n<Hr mt=\"8\" />\n\n### slugResolver\n\nUse the `slugResolver` option to have more flexibility on how video slugs are created.\n\n**Example:**\n\nThis will remove the `/videos` prefix and add a `.html` suffix to all video slugs.\n\n```js title=gatsby-config.js\nconst { toSlug } = require(\"@reflexjs/gatsby-helpers\") // highlight-line\n\nmodule.exports = {\n  plugins: [\n    `@reflexjs/gatsby-theme-base`,\n    {\n      resolve: `@reflexjs/gatsby-theme-video`,\n      // highlight-start\n      options: {\n        slugResolver: (node, parent, basePath) =>\n          `${toSlug(node.frontmatter.title)}.html`,\n      },\n      // highlight-end\n    },\n  ],\n}\n```\n\n### providers\n\nUse the `providers` options to define additional video providers. Youtube and Vimeo are supported by the package.\n\n```js\nmodule.exports = {\n  plugins: [\n    `@reflexjs/gatsby-theme-base`,\n    {\n      resolve: `@reflexjs/gatsby-theme-video`,\n      // highlight-start\n      options: {\n        providers: [\n          {\n            name: \"youtube\",\n            // Returns the embed url.\n            embedUrl: ({ videoId }) =>\n              `https://www.youtube.com/embed/${videoId}`,\n            // Callback to retrieve the video id from the url.\n            videoId: ({ url }) =>\n              url\n                .match(\n                  /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/i\n                )\n                ?.pop(),\n          },\n        ],\n      },\n      // highlight-end\n    },\n  ],\n}\n```\n"}},"next":{"__typename":"MdxDoc","id":"b7233265-ee95-56f7-b05c-d3093773d0fb","title":"Customization","slug":"/docs/video-customization","excerpt":"Customize the videos landing page, header and the video page.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Customization\",\n  \"excerpt\": \"Customize the videos landing page, header and the video page.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Videos landing page\"), mdx(\"p\", null, \"To customize the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/videos\"), \" landing page, create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/@reflexjs/gatsby-theme-video/videos.js\"), \":\"), mdx(\"p\", null, \"View \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/reflexjs/reflex/blob/master/packages/gatsby-theme-video/src/videos.js\"\n  }), \"source\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-video/videos.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-video/videos.js\"\n  }), \"import * as React from \\\"react\\\"\\nimport { Article, H2, P, Div, Grid, Span } from \\\"@reflexjs/components\\\"\\nimport { Link } from \\\"@reflexjs/gatsby-theme-core\\\"\\nimport { Image } from \\\"@reflexjs/gatsby-plugin-image\\\"\\n\\nexport const Videos = ({ videos }) => {\\n  // Add custom video display here.\\n}\\n\")), mdx(\"p\", null, \"See more examples in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/library/blocks#videos\"\n  }), \"blocks library\"), \".\"), mdx(\"h2\", null, \"Video page\"), mdx(\"p\", null, \"To customize the video page, create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"src/@reflexjs/gatsby-theme-video/video.js\"), \":\"), mdx(\"p\", null, \"View \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/reflexjs/reflex/blob/master/packages/gatsby-theme-video/src/video.js\"\n  }), \"source\"), \".\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-video/video.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-video/video.js\"\n  }), \"import * as React from \\\"react\\\"\\nimport { MDXRenderer, Icon, ButtonLink } from \\\"@reflexjs/gatsby-theme-core\\\"\\nimport { Article, H1, Container, Div, Iframe, P } from \\\"@reflexjs/components\\\"\\n\\nexport const Video = ({\\n  title,\\n  excerpt,\\n  body,\\n  embedUrl,\\n  date,\\n  datetime,\\n  pageContext,\\n}) => {\\n  return (\\n    <Article py=\\\"8|12|14\\\">\\n      <Container>// Customize the display here.</Container>\\n    </Article>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Add header and footer\"), mdx(\"p\", null, \"To add a header and footer to the video pages, create the following blocks.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"site\\n\\u2514\\u2500\\u2500 content\\n    \\u2514\\u2500\\u2500 blocks\\n        \\u2514\\u2500\\u2500 videos-header.mdx <-- /videos header // highlight-line\\n        \\u2514\\u2500\\u2500 videos-footer.mdx <-- /videos footer  // highlight-line\\n        \\u2514\\u2500\\u2500 video-header.mdx <-- video page header // highlight-line\\n        \\u2514\\u2500\\u2500 video-footer.mdx <-- video page footer // highlight-line\\n    \\u251C\\u2500\\u2500 images\\n    \\u251C\\u2500\\u2500 navs\\n    \\u251C\\u2500\\u2500 pages\\n    \\u2514\\u2500\\u2500 videos\\n\")), mdx(\"p\", null, \"The blocks are placed on the corresponding pages automatically.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#videos-landing-page","title":"Videos landing page"},{"url":"#video-page","title":"Video page"},{"url":"#add-header-and-footer","title":"Add header and footer"}],"timeToRead":1,"data":{"title":"Customization","excerpt":"Customize the videos landing page, header and the video page.","rawBody":"---\ntitle: Customization\nexcerpt: Customize the videos landing page, header and the video page.\n---\n\n## Videos landing page\n\nTo customize the `/videos` landing page, create `src/@reflexjs/gatsby-theme-video/videos.js`:\n\nView [source](https://github.com/reflexjs/reflex/blob/master/packages/gatsby-theme-video/src/videos.js).\n\n```jsx title=src/@reflexjs/gatsby-theme-video/videos.js\nimport * as React from \"react\"\nimport { Article, H2, P, Div, Grid, Span } from \"@reflexjs/components\"\nimport { Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\n\nexport const Videos = ({ videos }) => {\n  // Add custom video display here.\n}\n```\n\nSee more examples in the [blocks library](/library/blocks#videos).\n\n## Video page\n\nTo customize the video page, create `src/@reflexjs/gatsby-theme-video/video.js`:\n\nView [source](https://github.com/reflexjs/reflex/blob/master/packages/gatsby-theme-video/src/video.js).\n\n```jsx title=src/@reflexjs/gatsby-theme-video/video.js\nimport * as React from \"react\"\nimport { MDXRenderer, Icon, ButtonLink } from \"@reflexjs/gatsby-theme-core\"\nimport { Article, H1, Container, Div, Iframe, P } from \"@reflexjs/components\"\n\nexport const Video = ({\n  title,\n  excerpt,\n  body,\n  embedUrl,\n  date,\n  datetime,\n  pageContext,\n}) => {\n  return (\n    <Article py=\"8|12|14\">\n      <Container>// Customize the display here.</Container>\n    </Article>\n  )\n}\n```\n\n## Add header and footer\n\nTo add a header and footer to the video pages, create the following blocks.\n\n```\nsite\n└── content\n    └── blocks\n        └── videos-header.mdx <-- /videos header // highlight-line\n        └── videos-footer.mdx <-- /videos footer  // highlight-line\n        └── video-header.mdx <-- video page header // highlight-line\n        └── video-footer.mdx <-- video page footer // highlight-line\n    ├── images\n    ├── navs\n    ├── pages\n    └── videos\n```\n\nThe blocks are placed on the corresponding pages automatically.\n"}}},"pageContext":{"id":"65b31ebd-0c7b-560a-9431-b1d340c81e4d","prev":"b6854f1f-0d85-5316-979a-3ceb007a01a6","next":"b7233265-ee95-56f7-b05c-d3093773d0fb"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}