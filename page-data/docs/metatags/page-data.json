{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/metatags","result":{"data":{"doc":{"__typename":"MdxDoc","id":"fe8be3ab-2904-524d-a16c-3e7554371c1f","title":"Metatags","slug":"/docs/metatags","excerpt":"Add Open Graph and Twitter meta tags to your site.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Metatags\",\n  \"excerpt\": \"Add Open Graph and Twitter meta tags to your site.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar P = makeShortcode(\"P\");\nvar Callout = makeShortcode(\"Callout\");\nvar Button = makeShortcode(\"Button\");\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Installation\"), mdx(P, {\n    fontSize: \"xl\",\n    fontWeight: \"bold\",\n    mdxType: \"P\"\n  }, \"Step 1: Add the metatags package\"), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-plugin-metatags\"), \" package.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i @reflexjs/gatsby-plugin-metatags\\n\")), mdx(P, {\n    fontSize: \"xl\",\n    fontWeight: \"bold\",\n    pt: \"10\",\n    mdxType: \"P\"\n  }, \"Step 2: Enable meta tags for the Page type\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"require(`dotenv`).config()\\n\\nmodule.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    \\\"@reflexjs/gatsby-theme-post\\\",\\n    // highlight-start\\n    {\\n      resolve: \\\"@reflexjs/gatsby-plugin-metatags\\\",\\n      options: {\\n        types: [\\n          `Page`\\n        ]\\n      }\\n    }\\n    // highlight-end\\n  ],\\n}\\n\")), mdx(P, {\n    fontSize: \"xl\",\n    fontWeight: \"bold\",\n    pt: \"10\",\n    mdxType: \"P\"\n  }, \"Step 3: Add meta tags to a page\"), mdx(\"p\", null, \"Edit your page and add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metatags\"), \".\"), mdx(Callout, {\n    mb: \"10\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": If you do not provide the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"metatags\"), \" values, it will automatically be generated from the page title, description and image.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/profiles/2020-07-08-slug-of-post.mdx\",\n    \"title\": \"content/profiles/2020-07-08-slug-of-post.mdx\"\n  }), \"---\\ntitle: Title of the page\\nexcerpt: A short description for this post.\\nimage: image.jpg\\n// highlight-start\\nmetatags:\\n  title: Title of the page\\n  description: A description for meta description\\n  og:\\n    title: A custom title for open graph.\\n    description: Custom description for open graph.\\n    image: Image for open graph.\\n    type: article\\n  twitter:\\n    title: A custom title for Twitter cards.\\n    description: Description for Twitter cards.\\n    image: Custom image for Twitter cards.\\n    card: summary or summary_large_image\\n// highlight-end\\n---\\n\\nPage content goes here.\\n\")), mdx(\"h2\", null, \"Options\"), mdx(\"p\", null, \"Meta tags can be configured globally, per types and using path matching.\"), mdx(\"h3\", null, \"global\"), mdx(\"p\", null, \"Global meta tags are used on all pages where specific meta tags are not set. This is your default meta tags.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\\n  options: {\\n    // highlight-start\\n    global: {\\n      title: \\\"Megan Morales\\\",\\n      description: \\\"Wildlife Photographer and Storyteller.\\\",\\n      image: \\\"default.jpg\\\",\\n    },\\n    // highlight-end\\n  },\\n},\\n\")), mdx(\"h3\", null, \"types\"), mdx(\"p\", null, \"You can also enable and configure meta tags based on the node type. Example: a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Page\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Profile\"), \" can have different tags.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\\n  options: {\\n    // highlight-start\\n    types: [\\n      // Enable meta tags for Page type.\\n      `Page`,\\n      {\\n        // Enable meta tags for PostTag with defaults.\\n        type: `PostTag`,\\n        defaults: {\\n          title: (tag) => tag.name,\\n          description: (tag) => `Posts tagged under ${tag.name}.`,\\n        },\\n      },\\n    ],\\n    // highlight-end\\n  },\\n},\\n\")), mdx(\"h3\", null, \"paths\"), mdx(\"p\", null, \"You can also set custom tags using path matching.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\\n  options: {\\n    // highlight-start\\n    paths: [\\n      {\\n        pathname: `/blog{,/**}`,\\n        defaults: {\\n          title: `The Wildlife Blog`,\\n        },\\n      },\\n    ],\\n    // highlight-end\\n  },\\n},\\n\")), mdx(\"p\", null, \"The above config will set a default/fallback title for all pages starting with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/blog\"), \" path.\"), mdx(\"h2\", null, \"Debug mode\"), mdx(\"p\", null, \"Turn on debug mode during development to preview social cards.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\\n  options: {\\n    // highlight-start\\n    debug: true,\\n    // highlight-end\\n  },\\n},\\n\")), mdx(\"p\", null, \"This will add a \", mdx(Button, {\n    mx: \"2\",\n    fontSize: \"14px\",\n    p: \"10px 12px\",\n    mdxType: \"Button\"\n  }, \"Metatags\"), \" button that you can click to toggle the preview.\"), mdx(Image, {\n    src: \"metatags-debug.jpg\",\n    caption: \"Debugging metatags\",\n    borderWidth: \"1px\",\n    rounded: \"md\",\n    mdxType: \"Image\"\n  }), mdx(\"p\", null, \"Note: this is only available during development.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#installation","title":"Installation"},{"url":"#options","title":"Options","items":[{"url":"#global","title":"global"},{"url":"#types","title":"types"},{"url":"#paths","title":"paths"}]},{"url":"#debug-mode","title":"Debug mode"}],"timeToRead":1,"data":{"title":"Metatags","excerpt":"Add Open Graph and Twitter meta tags to your site.","rawBody":"---\ntitle: Metatags\nexcerpt: Add Open Graph and Twitter meta tags to your site.\n---\n\n## Installation\n\n<P fontSize=\"xl\" fontWeight=\"bold\">\n  Step 1: Add the metatags package\n</P>\n\nAdd the `@reflexjs/gatsby-plugin-metatags` package.\n\n```sh\nnpm i @reflexjs/gatsby-plugin-metatags\n```\n\n<P fontSize=\"xl\" fontWeight=\"bold\" pt=\"10\">\n  Step 2: Enable meta tags for the Page type\n</P>\n\n```js title=gatsby-config.js\nrequire(`dotenv`).config()\n\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    \"@reflexjs/gatsby-theme-post\",\n    // highlight-start\n    {\n      resolve: \"@reflexjs/gatsby-plugin-metatags\",\n      options: {\n        types: [\n          `Page`\n        ]\n      }\n    }\n    // highlight-end\n  ],\n}\n```\n\n<P fontSize=\"xl\" fontWeight=\"bold\" pt=\"10\">\n  Step 3: Add meta tags to a page\n</P>\n\nEdit your page and add `metatags`.\n\n<Callout mb=\"10\">\n\n**Note**: If you do not provide the `metatags` values, it will automatically be generated from the page title, description and image.\n\n</Callout >\n\n```md title=content/profiles/2020-07-08-slug-of-post.mdx\n---\ntitle: Title of the page\nexcerpt: A short description for this post.\nimage: image.jpg\n// highlight-start\nmetatags:\n  title: Title of the page\n  description: A description for meta description\n  og:\n    title: A custom title for open graph.\n    description: Custom description for open graph.\n    image: Image for open graph.\n    type: article\n  twitter:\n    title: A custom title for Twitter cards.\n    description: Description for Twitter cards.\n    image: Custom image for Twitter cards.\n    card: summary or summary_large_image\n// highlight-end\n---\n\nPage content goes here.\n```\n\n## Options\n\nMeta tags can be configured globally, per types and using path matching.\n\n### global\n\nGlobal meta tags are used on all pages where specific meta tags are not set. This is your default meta tags.\n\n```js\n{\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\n  options: {\n    // highlight-start\n    global: {\n      title: \"Megan Morales\",\n      description: \"Wildlife Photographer and Storyteller.\",\n      image: \"default.jpg\",\n    },\n    // highlight-end\n  },\n},\n```\n\n### types\n\nYou can also enable and configure meta tags based on the node type. Example: a `Page` and a `Profile` can have different tags.\n\n```js\n{\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\n  options: {\n    // highlight-start\n    types: [\n      // Enable meta tags for Page type.\n      `Page`,\n      {\n        // Enable meta tags for PostTag with defaults.\n        type: `PostTag`,\n        defaults: {\n          title: (tag) => tag.name,\n          description: (tag) => `Posts tagged under ${tag.name}.`,\n        },\n      },\n    ],\n    // highlight-end\n  },\n},\n```\n\n### paths\n\nYou can also set custom tags using path matching.\n\n```js\n{\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\n  options: {\n    // highlight-start\n    paths: [\n      {\n        pathname: `/blog{,/**}`,\n        defaults: {\n          title: `The Wildlife Blog`,\n        },\n      },\n    ],\n    // highlight-end\n  },\n},\n```\n\nThe above config will set a default/fallback title for all pages starting with the `/blog` path.\n\n## Debug mode\n\nTurn on debug mode during development to preview social cards.\n\n```js\n{\n  resolve: `@reflexjs/gatsby-plugin-metatags`,\n  options: {\n    // highlight-start\n    debug: true,\n    // highlight-end\n  },\n},\n```\n\nThis will add a <Button mx=\"2\" fontSize=\"14px\" p=\"10px 12px\">Metatags</Button> button that you can click to toggle the preview.\n\n<Image\n  src=\"metatags-debug.jpg\"\n  caption=\"Debugging metatags\"\n  borderWidth=\"1px\"\n  rounded=\"md\"\n/>\n\nNote: this is only available during development.\n"}},"prev":{"__typename":"MdxDoc","id":"0544563c-3bc9-5c99-bcb4-c7c776d9475e","title":"Images","slug":"/docs/images","excerpt":"Handling local and remote images in Reflex.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Images\",\n  \"excerpt\": \"Handling local and remote images in Reflex.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Local images\"), mdx(\"p\", null, \"To use and reference images in your content, place your images in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/images\"), \" directory.\"), mdx(\"p\", null, \"Then reference the image using its path.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Image src=\\\"name-of-image.png\\\" alt=\\\"An image\\\" />\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Image\"), \" component is a wrapper around Gatsby Image. You can learn more about Gatsby image \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/packages/gatsby-image/\"\n  }), \"here\"), \".\"), mdx(\"h2\", null, \"Remote images\"), mdx(\"p\", null, \"Remote images can be used the same way.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Image src=\\\"https://example.com/image.png\\\" alt=\\\"External image\\\" />\\n\")), mdx(Callout, {\n    level: \"secondary\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": Due to a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/gatsbyjs/gatsby/issues/19785\"\n  }), \"bug\"), \" with gatsby-remark-images\\nand mdx, we are using a workaround for images. We'll fix this once the bug is resolved.\")), mdx(\"h2\", null, \"Aspect ratio\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Image\"), \" component has support for aspect ratio using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"aspectRatio\"), \" prop:\"), mdx(\"h3\", null, \"4/3\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Image src=\\\"placeholder.jpg\\\" aspectRatio={4 / 3} />\\n\")), mdx(Image, {\n    src: \"placeholder.jpg\",\n    aspectRatio: 4 / 3,\n    maxW: \"50%\",\n    mdxType: \"Image\"\n  }), mdx(\"h3\", null, \"16/8\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Image src=\\\"placeholder.jpg\\\" aspectRatio={16 / 8} />\\n\")), mdx(Image, {\n    src: \"placeholder.jpg\",\n    aspectRatio: 16 / 8,\n    maxW: \"50%\",\n    mdxType: \"Image\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#local-images","title":"Local images"},{"url":"#remote-images","title":"Remote images"},{"url":"#aspect-ratio","title":"Aspect ratio","items":[{"url":"#43","title":"4/3"},{"url":"#168","title":"16/8"}]}],"timeToRead":1,"data":{"title":"Images","excerpt":"Handling local and remote images in Reflex.","rawBody":"---\ntitle: Images\nexcerpt: Handling local and remote images in Reflex.\n---\n\n## Local images\n\nTo use and reference images in your content, place your images in the `content/images` directory.\n\nThen reference the image using its path.\n\n```jsx\n<Image src=\"name-of-image.png\" alt=\"An image\" />\n```\n\nThe `Image` component is a wrapper around Gatsby Image. You can learn more about Gatsby image [here](https://www.gatsbyjs.org/packages/gatsby-image/).\n\n## Remote images\n\nRemote images can be used the same way.\n\n```jsx\n<Image src=\"https://example.com/image.png\" alt=\"External image\" />\n```\n\n<Callout level=\"secondary\">\n\n**Note**: Due to a [bug](https://github.com/gatsbyjs/gatsby/issues/19785) with gatsby-remark-images\nand mdx, we are using a workaround for images. We'll fix this once the bug is resolved.\n\n</Callout>\n\n## Aspect ratio\n\nThe `Image` component has support for aspect ratio using the `aspectRatio` prop:\n\n### 4/3\n\n```jsx\n<Image src=\"placeholder.jpg\" aspectRatio={4 / 3} />\n```\n\n<Image src=\"placeholder.jpg\" aspectRatio={4 / 3} maxW=\"50%\" />\n\n### 16/8\n\n```jsx\n<Image src=\"placeholder.jpg\" aspectRatio={16 / 8} />\n```\n\n<Image src=\"placeholder.jpg\" aspectRatio={16 / 8} maxW=\"50%\" />\n"}},"next":{"__typename":"MdxDoc","id":"0a85266d-69ff-561a-9387-27094d720724","title":"Recipes","slug":"/docs/recipes","excerpt":"Helpful guides and code snippets.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recipes\",\n  \"excerpt\": \"Helpful guides and code snippets.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Schema\"), mdx(\"h3\", null, \"Additional fields\"), mdx(\"p\", null, \"All Reflex schema types such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Page\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Post\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Video\"), \" have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" (JSON) field you can use to store additional data via frontmatter.\"), mdx(\"p\", null, \"Consider the following page example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/a-page.mdx\",\n    \"title\": \"content/pages/a-page.mdx\"\n  }), \"---\\ntitle: Page title\\ndisplay: full\\n---\\n\\nPage content\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"display\"), \" field is not defined in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Page\"), \" schema. However, when Reflex builds the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Page\"), \", all frontmatter fields, including \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"display\"), \", are stored\\nas is in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" field.\"), mdx(\"p\", null, \"You can leverage this to pass in additional data from your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" file to your component.\"), mdx(\"p\", null, \"Example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-core/page.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-core/page.js\"\n  }), \"export const Page = ({ title, data }) => (\\n  {data.display === \\\"full\\\"} do something... // highlight-line\\n)\\n\")), mdx(\"h2\", null, \"Theming\"), mdx(\"h3\", null, \"Styling components\"), mdx(\"p\", null, \"Any component can be styled in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.js\"), \" using the component name (lowercased).\"), mdx(\"p\", null, \"Example:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"button\"), \" for the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Button\"), \" component.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"h1\"), \" for the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"H1\"), \" component.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-base/theme.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-base/theme.js\"\n  }), \"import base from \\\"@reflexjs/preset-base\\\"\\n\\nexport default {\\n  preset: base,\\n  // highlight-start\\n  // Extend the styles for button.\\n  // This inherits all the styles from the base preset.\\n  button: {\\n    fontSize: \\\"md\\\",\\n    borderRadius: \\\"3xl\\\",\\n  },\\n  // highlight-end\\n}\\n\")), mdx(\"p\", null, \"We call this a variant. You can read more on Theme UI variants \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://theme-ui.com/theme-spec#variants\"\n  }), \"here\"), \".\"), mdx(\"h3\", null, \"Skipping breakpoints\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"null\"), \" to skip some breakpoints when using responsive style props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Div pt=\\\"null|null|10\\\" />\\n\")), mdx(\"h3\", null, \"Styling active links\"), mdx(\"p\", null, \"To style the active \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Link\"), \" component use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"activeStyle\"), \" prop:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Link\\n  to={slug}\\n  color=\\\"text\\\"\\n  fontWeight=\\\"semi\\\"\\n  // highlight-start\\n  activeStyle={{\\n    color: \\\"primary\\\",\\n  }}\\n  // highlight-end\\n>\\n  {title}\\n</Link>\\n\")), mdx(\"h3\", null, \"Custom syntax highlighting\"), mdx(\"p\", null, \"Syntax highlighting for the code block is provided by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://prismjs.com\"\n  }), \"Prism\"), \". To customize the colors, add the following colors to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"theme.js\"), \" file.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=src/@reflexjs/gatsby-theme-base/theme.js\",\n    \"title\": \"src/@reflexjs/gatsby-theme-base/theme.js\"\n  }), \"export default {\\n  preset: base,\\n  colors: {\\n    // Other custom colors.\\n    text: \\\"#000\\\",\\n    background: \\\"#fff\\\",\\n    primary: \\\"#2a9d8f\\\",\\n    secondary: \\\"#e76f51\\\",\\n    // highlight-start\\n    // Customize the code block theme.\\n    prism: {\\n      text: \\\"#d6deeb\\\",\\n      background: \\\"#212130\\\",\\n      comment: \\\"#93b4b4\\\",\\n      string: \\\"#addb67\\\",\\n      var: \\\"#d6deeb\\\",\\n      number: \\\"#f78c6c\\\",\\n      constant: \\\"#82aaff\\\",\\n      punctuation: \\\"#c792ea\\\",\\n      className: \\\"#ffcb8b\\\",\\n      tag: \\\"#7fdbca\\\",\\n      boolean: \\\"#ff5874\\\",\\n      property: \\\"#80cbc4\\\",\\n      namespace: \\\"#b2ccd6\\\",\\n      highlight: \\\"#243E73\\\",\\n      file: \\\"#92B5B2\\\",\\n    },\\n  },\\n  fonts: {\\n    ...\\n    // Customize the font for the code block.\\n    monospace: \\\"Menlo, monospace\\\",\\n  },\\n  // highlight-end\\n}\\n\")), mdx(\"h2\", null, \"Content\"), mdx(\"h3\", null, \"Slugs\"), mdx(\"p\", null, \"Every page is associated with a slug (or route).\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\"), \": If you create a page at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/pages/example.mdx\"), \", a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slug\"), \" will automatically\\nbe created for this page and will be accessible at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/example\"), \".\"), mdx(\"p\", null, \"You can manually specify the slug for a page by adding it to the page markdown.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"---\\ntitle: Example\\nexcerpt: This is an example page with a custom slug.\\nslug: a-custom-slug\\n---\\n\")), mdx(\"p\", null, \"The page above will be accessible at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/a-custom-slug.\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hint\"), \": If you name your page \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"index.mdx\"), \", it will use `` as the slug. Use this to create your front page.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content/pages/index.mdx\"), \" will have the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/\"), \" slug.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"content/pages/about/index.mdx\"), \" will have the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"/about\"), \" slug.\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#schema","title":"Schema","items":[{"url":"#additional-fields","title":"Additional fields"}]},{"url":"#theming","title":"Theming","items":[{"url":"#styling-components","title":"Styling components"},{"url":"#skipping-breakpoints","title":"Skipping breakpoints"},{"url":"#styling-active-links","title":"Styling active links"},{"url":"#custom-syntax-highlighting","title":"Custom syntax highlighting"}]},{"url":"#content","title":"Content","items":[{"url":"#slugs","title":"Slugs"}]}],"timeToRead":1,"data":{"title":"Recipes","excerpt":"Helpful guides and code snippets.","rawBody":"---\ntitle: Recipes\nexcerpt: Helpful guides and code snippets.\n---\n\n## Schema\n\n### Additional fields\n\nAll Reflex schema types such as `Page`, `Post` or `Video` have a `data` (JSON) field you can use to store additional data via frontmatter.\n\nConsider the following page example:\n\n```md title=content/pages/a-page.mdx\n---\ntitle: Page title\ndisplay: full\n---\n\nPage content\n```\n\nThe `display` field is not defined in the `Page` schema. However, when Reflex builds the `Page`, all frontmatter fields, including `display`, are stored\nas is in the `data` field.\n\nYou can leverage this to pass in additional data from your `.mdx` file to your component.\n\nExample:\n\n```jsx title=src/@reflexjs/gatsby-theme-core/page.js\nexport const Page = ({ title, data }) => (\n  {data.display === \"full\"} do something... // highlight-line\n)\n```\n\n## Theming\n\n### Styling components\n\nAny component can be styled in `theme.js` using the component name (lowercased).\n\nExample:\n\n1. Use `button` for the `Button` component.\n2. Use `h1` for the `H1` component.\n\n```js title=src/@reflexjs/gatsby-theme-base/theme.js\nimport base from \"@reflexjs/preset-base\"\n\nexport default {\n  preset: base,\n  // highlight-start\n  // Extend the styles for button.\n  // This inherits all the styles from the base preset.\n  button: {\n    fontSize: \"md\",\n    borderRadius: \"3xl\",\n  },\n  // highlight-end\n}\n```\n\nWe call this a variant. You can read more on Theme UI variants [here](https://theme-ui.com/theme-spec#variants).\n\n### Skipping breakpoints\n\nUse `null` to skip some breakpoints when using responsive style props.\n\n```jsx\n<Div pt=\"null|null|10\" />\n```\n\n### Styling active links\n\nTo style the active `Link` component use the `activeStyle` prop:\n\n```jsx\n<Link\n  to={slug}\n  color=\"text\"\n  fontWeight=\"semi\"\n  // highlight-start\n  activeStyle={{\n    color: \"primary\",\n  }}\n  // highlight-end\n>\n  {title}\n</Link>\n```\n\n### Custom syntax highlighting\n\nSyntax highlighting for the code block is provided by [Prism](https://prismjs.com). To customize the colors, add the following colors to your `theme.js` file.\n\n```js title=src/@reflexjs/gatsby-theme-base/theme.js\nexport default {\n  preset: base,\n  colors: {\n    // Other custom colors.\n    text: \"#000\",\n    background: \"#fff\",\n    primary: \"#2a9d8f\",\n    secondary: \"#e76f51\",\n    // highlight-start\n    // Customize the code block theme.\n    prism: {\n      text: \"#d6deeb\",\n      background: \"#212130\",\n      comment: \"#93b4b4\",\n      string: \"#addb67\",\n      var: \"#d6deeb\",\n      number: \"#f78c6c\",\n      constant: \"#82aaff\",\n      punctuation: \"#c792ea\",\n      className: \"#ffcb8b\",\n      tag: \"#7fdbca\",\n      boolean: \"#ff5874\",\n      property: \"#80cbc4\",\n      namespace: \"#b2ccd6\",\n      highlight: \"#243E73\",\n      file: \"#92B5B2\",\n    },\n  },\n  fonts: {\n    ...\n    // Customize the font for the code block.\n    monospace: \"Menlo, monospace\",\n  },\n  // highlight-end\n}\n```\n\n## Content\n\n### Slugs\n\nEvery page is associated with a slug (or route).\n\n**Example**: If you create a page at `content/pages/example.mdx`, a `slug` will automatically\nbe created for this page and will be accessible at `/example`.\n\nYou can manually specify the slug for a page by adding it to the page markdown.\n\n```jsx\n---\ntitle: Example\nexcerpt: This is an example page with a custom slug.\nslug: a-custom-slug\n---\n```\n\nThe page above will be accessible at `/a-custom-slug.`\n\n**Hint**: If you name your page `index.mdx`, it will use `` as the slug. Use this to create your front page.\n\n- `content/pages/index.mdx` will have the `/` slug.\n- `content/pages/about/index.mdx` will have the `/about` slug.\n"}}},"pageContext":{"id":"fe8be3ab-2904-524d-a16c-3e7554371c1f","prev":"0544563c-3bc9-5c99-bcb4-c7c776d9475e","next":"0a85266d-69ff-561a-9387-27094d720724"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3981103439","3981103439","4071972417","4071972417"]}