{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/configuration","result":{"data":{"doc":{"__typename":"MdxDoc","id":"4530dcfe-adb9-57c8-a204-29b75b9bbada","title":"Configuration","slug":"/docs/configuration","excerpt":"Configure your site name, description, plugins and themes.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configuration\",\n  \"excerpt\": \"Configure your site name, description, plugins and themes.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Hr = makeShortcode(\"Hr\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"gatsby-config.js\"), mdx(\"p\", null, \"Configuration options for a Gatsby (and Reflex) site are placed in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file at the root of the project folder.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\\"@reflexjs/gatsby-theme-base\\\"],\\n}\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"siteMetadata\"), mdx(\"p\", null, \"The siteMetadata is for common config that is used across the site. The site name (title), description and other site related\\nconfig are stored in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \".\"), mdx(\"p\", null, \"Reflex provides the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"useSiteMetadata\"), \" helper hook to retrieve the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"siteMetadata\"), \" config.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/copyright.mdx\",\n    \"title\": \"content/blocks/copyright.mdx\"\n  }), \"import { useSiteMetadata } from \\\"@reflexjs/gatsby-theme-core\\\" // highlight-line\\n\\nexport const Copyright = ({ ...props }) => {\\n  const { title } = useSiteMetadata() // highlight-line\\n  return (\\n    <P fontSize=\\\"sm\\\" {...props}>\\n      \\xA9 {new Date().getFullYear()} {title}\\n    </P>\\n  )\\n}\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"plugins\"), mdx(\"p\", null, \"This is where you define your site plugins and themes. Plugins can be listed by name or with options.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"module.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  // highlight-start\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    {\\n      resolve: \\\"@reflexjs/gatsby-theme-post\\\",\\n      options: {\\n        basePath: \\\"/the-blog\\\",\\n      }\\n    }\\n  ],\\n  // highlight-end\\n}\\n\")), mdx(\"p\", null, \"You can read more on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file in the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/docs/gatsby-config/\"\n  }), \"Gatsby docs\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#gatsby-configjs","title":"gatsby-config.js","items":[{"url":"#sitemetadata","title":"siteMetadata"},{"url":"#plugins","title":"plugins"}]}],"timeToRead":1,"data":{"title":"Configuration","excerpt":"Configure your site name, description, plugins and themes.","rawBody":"---\ntitle: Configuration\nexcerpt: Configure your site name, description, plugins and themes.\n---\n\n## gatsby-config.js\n\nConfiguration options for a Gatsby (and Reflex) site are placed in a `gatsby-config.js` file at the root of the project folder.\n\n```js title=gatsby-config.js\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\"@reflexjs/gatsby-theme-base\"],\n}\n```\n\n<Hr mt=\"8\" />\n\n### siteMetadata\n\nThe siteMetadata is for common config that is used across the site. The site name (title), description and other site related\nconfig are stored in the `siteMetadata`.\n\nReflex provides the `useSiteMetadata` helper hook to retrieve the `siteMetadata` config.\n\n```jsx title=content/blocks/copyright.mdx\nimport { useSiteMetadata } from \"@reflexjs/gatsby-theme-core\" // highlight-line\n\nexport const Copyright = ({ ...props }) => {\n  const { title } = useSiteMetadata() // highlight-line\n  return (\n    <P fontSize=\"sm\" {...props}>\n      Â© {new Date().getFullYear()} {title}\n    </P>\n  )\n}\n```\n\n<Hr mt=\"8\" />\n\n### plugins\n\nThis is where you define your site plugins and themes. Plugins can be listed by name or with options.\n\n```js title=gatsby-config.js\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  // highlight-start\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    {\n      resolve: \"@reflexjs/gatsby-theme-post\",\n      options: {\n        basePath: \"/the-blog\",\n      }\n    }\n  ],\n  // highlight-end\n}\n```\n\nYou can read more on the `gatsby-config.js` file in the [Gatsby docs](https://www.gatsbyjs.org/docs/gatsby-config/).\n"}},"prev":{"__typename":"MdxDoc","id":"5c636b0a-1cb7-5d6b-8048-c38b2c5f74f4","title":"Directory Structure","slug":"/docs/structure","excerpt":"The base Reflex structure is intended to provide a great starting point for building your site.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Directory Structure\",\n  \"excerpt\": \"The base Reflex structure is intended to provide a great starting point for building your site.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Hr = makeShortcode(\"Hr\");\nvar ButtonLink = makeShortcode(\"ButtonLink\");\nvar Icon = makeShortcode(\"Icon\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"However, Reflex imposes no restrictions on how you organize your content.\"), mdx(\"p\", null, \"Every theme exposes a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"contentPath\"), \" option that you can use to change where you place content files.\"), mdx(\"h2\", null, \"Structure\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"mysite\\n\\u251C\\u2500\\u2500 content\\n\\u2502   \\u251C\\u2500\\u2500 blocks\\n\\u2502   \\u251C\\u2500\\u2500 images\\n\\u2502   \\u251C\\u2500\\u2500 navs\\n\\u2502   \\u2514\\u2500\\u2500 pages\\n\\u251C\\u2500\\u2500 .env.example\\n\\u251C\\u2500\\u2500 .gitignore\\n\\u251C\\u2500\\u2500 gatsby-config.js\\n\\u251C\\u2500\\u2500 package.json\\n\\u2514\\u2500\\u2500 README.md\\n\")), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"content\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"content\"), \" directory contains all your site content. This is where you place your pages, blocks and images.\"), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"blocks\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"blocks\"), \" directory is for your re-usable blocks. Place your blocks here and reference them in your pages using the block name.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Block src=\\\"name-of-block\\\" />\"), \" is for a block at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/blocks/name-of-block.mdx\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/blocks\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about blocks \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"images\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"images\"), \" directory is for your images. Add your image files here and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Image\"), \" component to render them.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Image src=\\\"name-of-image.png\\\" />\"), \" will render an image placed at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/images/name-of-image.png\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/images\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about images \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"navs\"), mdx(\"p\", null, \"The \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"navs\"), \" directory is for navigation menus. Add your menus here and use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NavMenu\"), \" component to place them in blocks or pages.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<NavMenu name=\\\"header\\\" />\"), \" will render a nav placed at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/navs/header.mdx\"), \".\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/navs\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about navs \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }), mdx(\"h3\", null, \"pages\"), mdx(\"p\", null, \"This directory is where you place your pages. Every file placed in the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"pages\"), \" directory are automatically turned into pages with the page name as the slug.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Example\")), mdx(\"p\", null, \"A page at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"content/pages/example.mdx\"), \" will turned into a page with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/example\"), \" path.\"), mdx(ButtonLink, {\n    variant: \"muted sm\",\n    href: \"/docs/pages\",\n    mdxType: \"ButtonLink\"\n  }, \"Learn more about pages \", mdx(Icon, {\n    name: \"arrow-right\",\n    size: \"5\",\n    ml: \"2\",\n    mdxType: \"Icon\"\n  })), mdx(Hr, {\n    mt: \"8\",\n    mdxType: \"Hr\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#structure","title":"Structure","items":[{"url":"#content","title":"content"},{"url":"#blocks","title":"blocks"},{"url":"#images","title":"images"},{"url":"#navs","title":"navs"},{"url":"#pages","title":"pages"}]}],"timeToRead":1,"data":{"title":"Directory Structure","excerpt":"The base Reflex structure is intended to provide a great starting point for building your site.","rawBody":"---\ntitle: Directory Structure\nexcerpt: The base Reflex structure is intended to provide a great starting point for building your site.\n---\n\nHowever, Reflex imposes no restrictions on how you organize your content.\n\nEvery theme exposes a `contentPath` option that you can use to change where you place content files.\n\n## Structure\n\n```\nmysite\nâââ content\nâ   âââ blocks\nâ   âââ images\nâ   âââ navs\nâ   âââ pages\nâââ .env.example\nâââ .gitignore\nâââ gatsby-config.js\nâââ package.json\nâââ README.md\n```\n\n<Hr mt=\"8\" />\n\n### content\n\nThe _content_ directory contains all your site content. This is where you place your pages, blocks and images.\n\n<Hr mt=\"8\" />\n\n### blocks\n\nThe _blocks_ directory is for your re-usable blocks. Place your blocks here and reference them in your pages using the block name.\n\n**Example**\n\n`<Block src=\"name-of-block\" />` is for a block at `content/blocks/name-of-block.mdx`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/blocks\">\n  Learn more about blocks <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### images\n\nThe _images_ directory is for your images. Add your image files here and use the `Image` component to render them.\n\n**Example**\n\n`<Image src=\"name-of-image.png\" />` will render an image placed at `content/images/name-of-image.png`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/images\">\n  Learn more about images <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### navs\n\nThe _navs_ directory is for navigation menus. Add your menus here and use the `NavMenu` component to place them in blocks or pages.\n\n**Example**\n\n`<NavMenu name=\"header\" />` will render a nav placed at `content/navs/header.mdx`.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/navs\">\n  Learn more about navs <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n\n### pages\n\nThis directory is where you place your pages. Every file placed in the _pages_ directory are automatically turned into pages with the page name as the slug.\n\n**Example**\n\nA page at `content/pages/example.mdx` will turned into a page with the `/example` path.\n\n<ButtonLink variant=\"muted sm\" href=\"/docs/pages\">\n  Learn more about pages <Icon name=\"arrow-right\" size=\"5\" ml=\"2\" />\n</ButtonLink>\n\n<Hr mt=\"8\" />\n"}},"next":{"__typename":"MdxDoc","id":"379b5c8c-522a-542e-b76d-a8a3f26cf909","title":"Configure your editor","slug":"/docs/editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Configure your editor\",\n  \"excerpt\": \"Some helpful settings and extensions to make developing with Reflex easier.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"VS Code\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx\"\n  }), \"VSCode MDX\"), \" extension to add language support for MDX.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ESLint\"), \" support for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".md\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \" extensions.\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=.vscode/settings.json\",\n    \"title\": \".vscode/settings.json\"\n  }), \"{\\n  \\\"editor.codeActionsOnSave\\\": {\\n    \\\"source.fixAll\\\": true\\n  },\\n  \\\"eslint.options\\\": {\\n    \\\"extensions\\\": [\\\".js\\\", \\\".jsx\\\", \\\".md\\\", \\\".mdx\\\", \\\".ts\\\", \\\".tsx\\\"] // highlight-line\\n  }\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#vs-code","title":"VS Code"}],"timeToRead":1,"data":{"title":"Configure your editor","excerpt":"Some helpful settings and extensions to make developing with Reflex easier.","rawBody":"---\ntitle: Configure your editor\nexcerpt: Some helpful settings and extensions to make developing with Reflex easier.\n---\n\n## VS Code\n\n1. Install the [VSCode MDX](https://marketplace.visualstudio.com/items?itemName=JounQin.vscode-mdx) extension to add language support for MDX.\n\n2. Enable `ESLint` support for `.md` and `.mdx` extensions.\n\n```js title=.vscode/settings.json\n{\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll\": true\n  },\n  \"eslint.options\": {\n    \"extensions\": [\".js\", \".jsx\", \".md\", \".mdx\", \".ts\", \".tsx\"] // highlight-line\n  }\n}\n```\n"}}},"pageContext":{"id":"4530dcfe-adb9-57c8-a204-29b75b9bbada","prev":"5c636b0a-1cb7-5d6b-8048-c38b2c5f74f4","next":"379b5c8c-522a-542e-b76d-a8a3f26cf909"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}