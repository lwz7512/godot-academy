{"componentChunkName":"component---node-modules-reflexjs-gatsby-theme-doc-src-doc-template-js","path":"/docs/pages-blocks-library","result":{"data":{"doc":{"__typename":"MdxDoc","id":"5e0a941a-bc80-5c08-ba77-394a5640d399","title":"Blocks library","slug":"/docs/pages-blocks-library","excerpt":"The blocks library has pre-built blocks that you can copy and paste into your site.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Blocks library\",\n  \"excerpt\": \"The blocks library has pre-built blocks that you can copy and paste into your site.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Block = makeShortcode(\"Block\");\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Block, {\n    src: \"video-card\",\n    heading: \"How to use the Blocks Library\",\n    url: \"https://www.youtube-nocookie.com/embed/7GXlCxSFITI\",\n    mdxType: \"Block\"\n  }), mdx(\"h2\", null, \"Preview\"), mdx(Image, {\n    src: \"reflex-blocks-library-screenshot.jpg\",\n    mdxType: \"Image\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#preview","title":"Preview"}],"timeToRead":1,"data":{"title":"Blocks library","excerpt":"The blocks library has pre-built blocks that you can copy and paste into your site.","rawBody":"---\ntitle: Blocks library\nexcerpt: The blocks library has pre-built blocks that you can copy and paste into your site.\n---\n\n<Block\n  src=\"video-card\"\n  heading=\"How to use the Blocks Library\"\n  url=\"https://www.youtube-nocookie.com/embed/7GXlCxSFITI\"\n/>\n\n## Preview\n\n<Image src=\"reflex-blocks-library-screenshot.jpg\" />\n"}},"prev":{"__typename":"MdxDoc","id":"4a98629b-ac25-5aae-b4d9-e0578b442015","title":"Dynamic Blocks","slug":"/docs/pages-dynamic-block","excerpt":"Blocks can accept props just like React components.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dynamic Blocks\",\n  \"excerpt\": \"Blocks can accept props just like React components.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The hero we created has some hard-coded values. This is not re-usable. Let's change that by using props.\"), mdx(\"p\", null, \"We are going to wrap the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hero.mdx\"), \" block in a named export. The name can be anything you want.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/hero.mdx\",\n    \"title\": \"content/blocks/hero.mdx\"\n  }), \"// highlight-start\\nexport const HeroBlock = () => (\\n  // highlight-end\\n  <Section p=\\\"4\\\">\\n    <Container>\\n      <Grid col=\\\"1fr 250px\\\" gap=\\\"8\\\" alignItems=\\\"center\\\">\\n        <Div>\\n          <H1 my=\\\"0\\\" fontSize=\\\"4xl\\\">\\n            Welcome to my site\\n          </H1>\\n          <P mt=\\\"4\\\">This is the a short description for the page</P>\\n        </Div>\\n        <Image src=\\\"placeholder.jpg\\\" />\\n      </Grid>\\n    </Container>\\n  </Section>\\n) // highlight-line\\n\")), mdx(\"p\", null, \"Then replace the hard-coded values by props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"title=content/blocks/hero.mdx\",\n    \"title\": \"content/blocks/hero.mdx\"\n  }), \"// highlight-start\\nexport const HeroBlock = ({ heading, text }) => (\\n  // highlight-end\\n  <Section p=\\\"4\\\">\\n    <Container>\\n      <Grid col=\\\"1fr 250px\\\" gap=\\\"8\\\" alignItems=\\\"center\\\">\\n        <Div>\\n          <H1 my=\\\"0\\\" fontSize=\\\"4xl\\\">\\n            {heading} // highlight-line\\n          </H1>\\n          <P mt=\\\"4\\\">{text}</P> // highlight-line\\n        </Div>\\n        <Image src=\\\"placeholder.jpg\\\" />\\n      </Grid>\\n    </Container>\\n  </Section>\\n)\\n\")), mdx(\"p\", null, \"Update the block on the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"about.mdx\"), \" page to use props.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/about.mdx\",\n    \"title\": \"content/pages/about.mdx\"\n  }), \"---\\ntitle: Welcome to Reflex\\nexcerpt: Description for this page. This is mostly used for the description meta tag.\\n---\\n\\n// highlight-start\\n\\n<Block src=\\\"hero\\\" heading=\\\"Welcome to my site\\\" text=\\\"This is the a short description for the page\\\" />\\n\\n// highlight-end\\n\")), mdx(\"p\", null, \"Now that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hero.mdx\"), \" block can accept props, we can re-use it on other pages.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-md\",\n    \"metastring\": \"title=content/pages/pricing.mdx\",\n    \"title\": \"content/pages/pricing.mdx\"\n  }), \"---\\ntitle: Pricing\\n---\\n\\n// highlight-start\\n\\n<Block src=\\\"hero\\\" heading=\\\"Pricing\\\" text=\\\"This is the a short description for the pricing page\\\" />\\n\\n// highlight-end\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"timeToRead":1,"data":{"title":"Dynamic Blocks","excerpt":"Blocks can accept props just like React components.","rawBody":"---\ntitle: Dynamic Blocks\nexcerpt: Blocks can accept props just like React components.\n---\n\nThe hero we created has some hard-coded values. This is not re-usable. Let's change that by using props.\n\nWe are going to wrap the `hero.mdx` block in a named export. The name can be anything you want.\n\n```jsx title=content/blocks/hero.mdx\n// highlight-start\nexport const HeroBlock = () => (\n  // highlight-end\n  <Section p=\"4\">\n    <Container>\n      <Grid col=\"1fr 250px\" gap=\"8\" alignItems=\"center\">\n        <Div>\n          <H1 my=\"0\" fontSize=\"4xl\">\n            Welcome to my site\n          </H1>\n          <P mt=\"4\">This is the a short description for the page</P>\n        </Div>\n        <Image src=\"placeholder.jpg\" />\n      </Grid>\n    </Container>\n  </Section>\n) // highlight-line\n```\n\nThen replace the hard-coded values by props.\n\n```jsx title=content/blocks/hero.mdx\n// highlight-start\nexport const HeroBlock = ({ heading, text }) => (\n  // highlight-end\n  <Section p=\"4\">\n    <Container>\n      <Grid col=\"1fr 250px\" gap=\"8\" alignItems=\"center\">\n        <Div>\n          <H1 my=\"0\" fontSize=\"4xl\">\n            {heading} // highlight-line\n          </H1>\n          <P mt=\"4\">{text}</P> // highlight-line\n        </Div>\n        <Image src=\"placeholder.jpg\" />\n      </Grid>\n    </Container>\n  </Section>\n)\n```\n\nUpdate the block on the `about.mdx` page to use props.\n\n```md title=content/pages/about.mdx\n---\ntitle: Welcome to Reflex\nexcerpt: Description for this page. This is mostly used for the description meta tag.\n---\n\n// highlight-start\n\n<Block src=\"hero\" heading=\"Welcome to my site\" text=\"This is the a short description for the page\" />\n\n// highlight-end\n```\n\nNow that the `hero.mdx` block can accept props, we can re-use it on other pages.\n\n```md title=content/pages/pricing.mdx\n---\ntitle: Pricing\n---\n\n// highlight-start\n\n<Block src=\"hero\" heading=\"Pricing\" text=\"This is the a short description for the pricing page\" />\n\n// highlight-end\n```\n"}},"next":{"__typename":"MdxDoc","id":"29d66933-fbf1-5819-8888-3b11d3146a18","title":"Build a blog","slug":"/docs/blog","excerpt":"Learn how to build a blog with Reflex.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Build a blog\",\n  \"excerpt\": \"Learn how to build a blog with Reflex.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-post\"), \" package to add a blog to your site.\"), mdx(\"h2\", null, \"Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write your posts using Markdown\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add interactive component using MDX\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Multi-user support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Includes tags for taxonomy\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code highlighting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click to copy and line highlighting for code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SEO, Open graph and Twitter metatags.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fully accessible (WAI-ARIA standards)\")), mdx(\"h2\", null, \"Installation\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1: add dependencies\")), mdx(\"p\", null, \"Add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@reflexjs/gatsby-theme-post\"), \" package.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"npm i @reflexjs/gatsby-theme-post\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2: enable the plugin\")), mdx(\"p\", null, \"Edit your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby-config.js\"), \" file and add the plugin.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"title=gatsby-config.js\",\n    \"title\": \"gatsby-config.js\"\n  }), \"require(`dotenv`).config()\\n\\nmodule.exports = {\\n  siteMetadata: {\\n    title: \\\"Reflex\\\",\\n    description: \\\"Starter for Reflex.\\\",\\n    siteUrl: process.env.SITE_URL || \\\"http://localhost:8000\\\",\\n  },\\n  plugins: [\\n    \\\"@reflexjs/gatsby-theme-base\\\"\\n    \\\"@reflexjs/gatsby-theme-post\\\" // highlight-line\\n  ],\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3: run your site\")), mdx(\"p\", null, \"Start the development server.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"gatsby develop\\n\")), mdx(\"p\", null, \"This will add the following directories to your site.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"site\\n\\u2514\\u2500\\u2500 content\\n    \\u2514\\u2500\\u2500 blocks\\n        \\u251C\\u2500\\u2500 images\\n        \\u251C\\u2500\\u2500 navs\\n        \\u251C\\u2500\\u2500 pages\\n        \\u251C\\u2500\\u2500 posts\\n        \\u2502   \\u2514\\u2500\\u2500 . <-- Place posts here. // highlight-line\\n        \\u2514\\u2500\\u2500 profiles\\n            \\u2514\\u2500\\u2500 . <-- Place author profiles here. // highlight-line\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":[{"url":"#features","title":"Features"},{"url":"#installation","title":"Installation"}],"timeToRead":1,"data":{"title":"Build a blog","excerpt":"Learn how to build a blog with Reflex.","rawBody":"---\ntitle: Build a blog\nexcerpt: Learn how to build a blog with Reflex.\n---\n\nUse the `@reflexjs/gatsby-theme-post` package to add a blog to your site.\n\n## Features\n\n- Write your posts using Markdown\n- Add interactive component using MDX\n- Multi-user support\n- Includes tags for taxonomy\n- Code highlighting\n- Click to copy and line highlighting for code\n- SEO, Open graph and Twitter metatags.\n- Fully accessible (WAI-ARIA standards)\n\n## Installation\n\n**Step 1: add dependencies**\n\nAdd the `@reflexjs/gatsby-theme-post` package.\n\n```sh\nnpm i @reflexjs/gatsby-theme-post\n```\n\n**Step 2: enable the plugin**\n\nEdit your `gatsby-config.js` file and add the plugin.\n\n```js title=gatsby-config.js\nrequire(`dotenv`).config()\n\nmodule.exports = {\n  siteMetadata: {\n    title: \"Reflex\",\n    description: \"Starter for Reflex.\",\n    siteUrl: process.env.SITE_URL || \"http://localhost:8000\",\n  },\n  plugins: [\n    \"@reflexjs/gatsby-theme-base\"\n    \"@reflexjs/gatsby-theme-post\" // highlight-line\n  ],\n}\n```\n\n**Step 3: run your site**\n\nStart the development server.\n\n```sh\ngatsby develop\n```\n\nThis will add the following directories to your site.\n\n```\nsite\n└── content\n    └── blocks\n        ├── images\n        ├── navs\n        ├── pages\n        ├── posts\n        │   └── . <-- Place posts here. // highlight-line\n        └── profiles\n            └── . <-- Place author profiles here. // highlight-line\n```\n"}}},"pageContext":{"id":"5e0a941a-bc80-5c08-ba77-394a5640d399","prev":"4a98629b-ac25-5aae-b4d9-e0578b442015","next":"29d66933-fbf1-5819-8888-3b11d3146a18"}},"staticQueryHashes":["2206637893","2206637893","2723618800","2723618800","2877882650","2877882650","3223469662","3223469662","3699512716","3699512716","4071972417","4071972417"]}