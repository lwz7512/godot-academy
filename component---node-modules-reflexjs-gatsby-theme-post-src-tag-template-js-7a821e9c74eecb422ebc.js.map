{"version":3,"sources":["webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/tag-template.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/posts.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/post-meta.js"],"names":["query","data","props","pathname","postTag","slug","py","alignItems","mb","m","name","to","pageContext","themeOptions","basePath","variant","ml","allPost","Posts","posts","length","col","gap","map","post","index","key","PostTeaser","title","excerpt","image","date","datetime","author","timeToRead","href","d","src","alt","my","fontSize","hoverColor","mt","PostMeta","mr","picture","size","rounded","overflow","fontWeight","dateTime"],"mappings":"0MAMaA,EAAK,aAoBH,0BAAGC,EAAH,EAAGA,KAASC,EAAZ,+BACb,gBAAC,IAAD,CAAQC,SAAUF,EAAKG,QAAQC,MAC7B,gBAAC,UAAD,CAASC,GAAG,WACV,gBAAC,YAAD,KACE,gBAAC,UAAD,CAASC,WAAW,SAASC,GAAG,UAC9B,gBAAC,KAAD,CAAIC,EAAE,KAAKR,EAAKG,QAAQM,MACxB,gBAAC,IAAD,CACEC,GAAIT,EAAMU,YAAYC,aAAaC,SACnCC,QAAQ,OACRC,GAAG,QAHL,aAKY,gBAAC,IAAD,CAAMN,KAAK,cAAcM,GAAG,QAG1C,gBAAC,IAAD,iBAAWf,EAAKgB,QAAaf,S,gJClCxBgB,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OAAOA,EAAMC,OACX,gBAAC,OAAD,CAAMC,IAAI,MAAMC,IAAI,SACjBH,GACCA,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACR,gBAAC,MAAD,CAAKC,IAAKD,EAAOjB,GAAG,KAClB,gBAACmB,EAAeH,QAItB,MAGOG,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,MACAC,EAFwB,EAExBA,QACAxB,EAHwB,EAGxBA,KACAyB,EAJwB,EAIxBA,MACAC,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,SACAC,EAPwB,EAOxBA,OACAC,EARwB,EAQxBA,WACGhC,EATqB,iGAWxB,gBAAC,UAAYA,EACX,gBAAC,OAAD,KACG4B,GACC,gBAAC,IAAD,CAAMK,KAAM9B,EAAM+B,EAAE,SAClB,gBAAC,IAAD,CAAOC,IAAKP,EAAOF,MAAOA,EAAOU,IAAKV,KAGzCA,GACC,gBAAC,IAAD,CAAMO,KAAM9B,GACV,gBAAC,KAAD,CAAIkC,GAAG,IAAIC,SAAS,MAAMC,WAAW,WAClCb,IAINC,GAAW,gBAAC,IAAD,CAAGa,GAAG,KAAKb,GAEvB,gBAAC,IAAD,CACEI,OAAQA,EACRC,WAAYA,EACZH,KAAMA,EACNC,SAAUA,EACVQ,SAAS,W,wHC/CJG,EAAW,SAAC,GAAD,IAAGV,EAAH,EAAGA,OAAQD,EAAX,EAAWA,SAAUD,EAArB,EAAqBA,KAAMG,EAA3B,EAA2BA,WAAehC,EAA1C,gEACtB,gBAAC,UAAYA,EACV+B,GACC,gBAAC,UAAD,CAAS1B,WAAW,SAASqC,GAAG,KAC9B,gBAAC,IAAD,CACEP,IAAKJ,EAAOY,QACZT,EAAE,eACF3B,EAAE,IACFmC,GAAG,IACHE,KAAK,KACLC,QAAQ,OACRC,SAAS,WAEX,gBAAC,OAAD,CAAMC,WAAW,YAAYhB,EAAOvB,OAGvCqB,GAAQ,wBAAMmB,SAAUlB,GAAhB,MAA8BD,GACtCG,GAAc,gBAAC,OAAD,CAAMlB,GAAG,KAAT,MAAiBkB,EAAjB","file":"component---node-modules-reflexjs-gatsby-theme-post-src-tag-template-js-7a821e9c74eecb422ebc.js","sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Container, Section, H1, Flexbox } from \"@reflexjs/components\"\nimport { Layout, ButtonLink, Icon } from \"@reflexjs/gatsby-theme-core\"\nimport { Posts } from \"./posts\"\n\nexport const query = graphql`\n  query($name: String!) {\n    postTag(name: { eq: $name }) {\n      name\n      slug\n    }\n    allPost(\n      filter: {\n        published: { eq: true }\n        tags: { elemMatch: { name: { eq: $name } } }\n      }\n      sort: { fields: [date], order: DESC }\n    ) {\n      posts: nodes {\n        ...PostFragment\n      }\n    }\n  }\n`\n\nexport default ({ data, ...props }) => (\n  <Layout pathname={data.postTag.slug}>\n    <Section py=\"8|12|14\">\n      <Container>\n        <Flexbox alignItems=\"center\" mb=\"6|8|10\">\n          <H1 m=\"0\">{data.postTag.name}</H1>\n          <ButtonLink\n            to={props.pageContext.themeOptions.basePath}\n            variant=\"link\"\n            ml=\"auto\"\n          >\n            All posts <Icon name=\"arrow-right\" ml=\"2\" />\n          </ButtonLink>\n        </Flexbox>\n        <Posts {...data.allPost} {...props} />\n      </Container>\n    </Section>\n  </Layout>\n)\n","import * as React from \"react\"\nimport { Article, H2, P, Div, Grid } from \"@reflexjs/components\"\nimport { Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\nimport { PostMeta } from \"./post-meta\"\n\nexport const Posts = ({ posts }) => {\n  return posts.length ? (\n    <Grid col=\"1|2\" gap=\"10|14\">\n      {posts &&\n        posts.map((post, index) => (\n          <Div key={index} mb=\"8\">\n            <PostTeaser {...post} />\n          </Div>\n        ))}\n    </Grid>\n  ) : null\n}\n\nexport const PostTeaser = ({\n  title,\n  excerpt,\n  slug,\n  image,\n  date,\n  datetime,\n  author,\n  timeToRead,\n  ...props\n}) => (\n  <Article {...props}>\n    <Grid>\n      {image && (\n        <Link href={slug} d=\"block\">\n          <Image src={image} title={title} alt={title} />\n        </Link>\n      )}\n      {title && (\n        <Link href={slug}>\n          <H2 my=\"4\" fontSize=\"3xl\" hoverColor=\"primary\">\n            {title}\n          </H2>\n        </Link>\n      )}\n      {excerpt && <P mt=\"1\">{excerpt}</P>}\n\n      <PostMeta\n        author={author}\n        timeToRead={timeToRead}\n        date={date}\n        datetime={datetime}\n        fontSize=\"md\"\n      />\n    </Grid>\n  </Article>\n)\n","import * as React from \"react\"\nimport { Flexbox, Span } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\n\nexport const PostMeta = ({ author, datetime, date, timeToRead, ...props }) => (\n  <Flexbox {...props}>\n    {author && (\n      <Flexbox alignItems=\"center\" mr=\"2\">\n        <Image\n          src={author.picture}\n          d=\"inline-block\"\n          m=\"0\"\n          mr=\"2\"\n          size=\"10\"\n          rounded=\"full\"\n          overflow=\"hidden\"\n        />\n        <Span fontWeight=\"semibold\">{author.name}</Span>\n      </Flexbox>\n    )}\n    {date && <time dateTime={datetime}> - {date}</time>}\n    {timeToRead && <Span ml=\"2\"> - {timeToRead} min read</Span>}\n  </Flexbox>\n)\n"],"sourceRoot":""}