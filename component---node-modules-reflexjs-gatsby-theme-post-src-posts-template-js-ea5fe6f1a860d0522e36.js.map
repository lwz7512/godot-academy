{"version":3,"sources":["webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/posts.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/posts-template.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/post-meta.js"],"names":["Posts","posts","length","col","gap","map","post","index","key","mb","PostTeaser","title","excerpt","slug","image","date","datetime","author","timeToRead","props","href","d","src","alt","my","fontSize","hoverColor","mt","query","data","pageContext","previousPagePath","nextPagePath","pathname","location","allPost","py","videos","PostMeta","alignItems","mr","picture","m","size","rounded","overflow","fontWeight","name","dateTime","ml"],"mappings":"gOAMaA,EAAQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OAAOA,EAAMC,OACX,gBAAC,OAAD,CAAMC,IAAI,MAAMC,IAAI,SACjBH,GACCA,EAAMI,KAAI,SAACC,EAAMC,GAAP,OACR,gBAAC,MAAD,CAAKC,IAAKD,EAAOE,GAAG,KAClB,gBAAC,EAAeH,QAItB,MAGOI,EAAa,SAAC,GAAD,IACxBC,EADwB,EACxBA,MACAC,EAFwB,EAExBA,QACAC,EAHwB,EAGxBA,KACAC,EAJwB,EAIxBA,MACAC,EALwB,EAKxBA,KACAC,EANwB,EAMxBA,SACAC,EAPwB,EAOxBA,OACAC,EARwB,EAQxBA,WACGC,EATqB,iGAWxB,gBAAC,UAAYA,EACX,gBAAC,OAAD,KACGL,GACC,gBAAC,IAAD,CAAMM,KAAMP,EAAMQ,EAAE,SAClB,gBAAC,IAAD,CAAOC,IAAKR,EAAOH,MAAOA,EAAOY,IAAKZ,KAGzCA,GACC,gBAAC,IAAD,CAAMS,KAAMP,GACV,gBAAC,KAAD,CAAIW,GAAG,IAAIC,SAAS,MAAMC,WAAW,WAClCf,IAINC,GAAW,gBAAC,IAAD,CAAGe,GAAG,KAAKf,GAEvB,gBAAC,IAAD,CACEK,OAAQA,EACRC,WAAYA,EACZH,KAAMA,EACNC,SAAUA,EACVS,SAAS,UC5CJG,EAAK,aAeH,sBAAyB,IAAtBC,EAAqB,EAArBA,KAASV,EAAY,0BACMA,EAAMW,YAAzCC,EAD6B,EAC7BA,iBAAkBC,EADW,EACXA,aAC1B,OACE,gBAAC,IAAD,CAAQC,SAAUd,EAAMe,SAASD,UAC/B,gBAAC,IAAD,CAAOX,IAAI,eAAerB,MAAO4B,EAAKM,QAAQlC,QAC7C4B,EAAKM,QACJ,gBAAC,UAAD,CAASC,GAAG,WACV,gBAAC,YAAD,KACE,gBAAC,EAAD,iBAAWP,EAAKM,QAAahB,IAC7B,gBAAC,IAAD,CACEY,iBAAkBA,EAClBC,aAAcA,MAIlB,KACJ,gBAAC,IAAD,CAAOV,IAAI,eAAee,OAAQR,EAAKM,QAAQlC,W,wHClCxCqC,EAAW,SAAC,GAAD,IAAGrB,EAAH,EAAGA,OAAQD,EAAX,EAAWA,SAAUD,EAArB,EAAqBA,KAAMG,EAA3B,EAA2BA,WAAeC,EAA1C,gEACtB,gBAAC,UAAYA,EACVF,GACC,gBAAC,UAAD,CAASsB,WAAW,SAASC,GAAG,KAC9B,gBAAC,IAAD,CACElB,IAAKL,EAAOwB,QACZpB,EAAE,eACFqB,EAAE,IACFF,GAAG,IACHG,KAAK,KACLC,QAAQ,OACRC,SAAS,WAEX,gBAAC,OAAD,CAAMC,WAAW,YAAY7B,EAAO8B,OAGvChC,GAAQ,wBAAMiC,SAAUhC,GAAhB,MAA8BD,GACtCG,GAAc,gBAAC,OAAD,CAAM+B,GAAG,KAAT,MAAiB/B,EAAjB","file":"component---node-modules-reflexjs-gatsby-theme-post-src-posts-template-js-ea5fe6f1a860d0522e36.js","sourcesContent":["import * as React from \"react\"\nimport { Article, H2, P, Div, Grid } from \"@reflexjs/components\"\nimport { Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\nimport { PostMeta } from \"./post-meta\"\n\nexport const Posts = ({ posts }) => {\n  return posts.length ? (\n    <Grid col=\"1|2\" gap=\"10|14\">\n      {posts &&\n        posts.map((post, index) => (\n          <Div key={index} mb=\"8\">\n            <PostTeaser {...post} />\n          </Div>\n        ))}\n    </Grid>\n  ) : null\n}\n\nexport const PostTeaser = ({\n  title,\n  excerpt,\n  slug,\n  image,\n  date,\n  datetime,\n  author,\n  timeToRead,\n  ...props\n}) => (\n  <Article {...props}>\n    <Grid>\n      {image && (\n        <Link href={slug} d=\"block\">\n          <Image src={image} title={title} alt={title} />\n        </Link>\n      )}\n      {title && (\n        <Link href={slug}>\n          <H2 my=\"4\" fontSize=\"3xl\" hoverColor=\"primary\">\n            {title}\n          </H2>\n        </Link>\n      )}\n      {excerpt && <P mt=\"1\">{excerpt}</P>}\n\n      <PostMeta\n        author={author}\n        timeToRead={timeToRead}\n        date={date}\n        datetime={datetime}\n        fontSize=\"md\"\n      />\n    </Grid>\n  </Article>\n)\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Layout, Pager } from \"@reflexjs/gatsby-theme-core\"\nimport { Block } from \"@reflexjs/gatsby-theme-block\"\nimport { Container, Section } from \"@reflexjs/components\"\nimport { Posts } from \"./posts\"\n\nexport const query = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allPost(\n      sort: { fields: [date], order: DESC }\n      filter: { published: { eq: true } }\n      skip: $skip\n      limit: $limit\n    ) {\n      posts: nodes {\n        ...PostFragment\n      }\n    }\n  }\n`\n\nexport default ({ data, ...props }) => {\n  const { previousPagePath, nextPagePath } = props.pageContext\n  return (\n    <Layout pathname={props.location.pathname}>\n      <Block src=\"posts-header\" posts={data.allPost.posts} />\n      {data.allPost ? (\n        <Section py=\"8|12|14\">\n          <Container>\n            <Posts {...data.allPost} {...props} />\n            <Pager\n              previousPagePath={previousPagePath}\n              nextPagePath={nextPagePath}\n            />\n          </Container>\n        </Section>\n      ) : null}\n      <Block src=\"posts-footer\" videos={data.allPost.posts} />\n    </Layout>\n  )\n}\n","import * as React from \"react\"\nimport { Flexbox, Span } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\n\nexport const PostMeta = ({ author, datetime, date, timeToRead, ...props }) => (\n  <Flexbox {...props}>\n    {author && (\n      <Flexbox alignItems=\"center\" mr=\"2\">\n        <Image\n          src={author.picture}\n          d=\"inline-block\"\n          m=\"0\"\n          mr=\"2\"\n          size=\"10\"\n          rounded=\"full\"\n          overflow=\"hidden\"\n        />\n        <Span fontWeight=\"semibold\">{author.name}</Span>\n      </Flexbox>\n    )}\n    {date && <time dateTime={datetime}> - {date}</time>}\n    {timeToRead && <Span ml=\"2\"> - {timeToRead} min read</Span>}\n  </Flexbox>\n)\n"],"sourceRoot":""}