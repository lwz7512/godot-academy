{"version":3,"sources":["webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/post.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/post-template.js","webpack:///./node_modules/@reflexjs/gatsby-theme-post/src/post-meta.js"],"names":["Post","title","excerpt","body","image","caption","date","datetime","author","timeToRead","tags","py","maxW","textAlign","to","slug","textDecoration","color","name","my","fontWeight","fontSize","mx","alignItems","justifyContent","variant","src","alt","overflow","sx","img","borderRadius","map","index","key","display","bg","px","rounded","ml","hoverBg","hoverColor","query","data","props","post","previous","prev","next","pathname","PostMeta","mr","picture","d","m","size","dateTime"],"mappings":"4OAMaA,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,QACAC,EAHkB,EAGlBA,KACAC,EAJkB,EAIlBA,MACAC,EALkB,EAKlBA,QACAC,EANkB,EAMlBA,KACAC,EAPkB,EAOlBA,SACAC,EARkB,EAQlBA,OACAC,EATkB,EASlBA,WACAC,EAVkB,EAUlBA,KAVkB,OAYlB,gBAAC,UAAD,CAASC,GAAG,WACV,gBAAC,YAAD,CAAWC,KAAK,wBACd,gBAAC,MAAD,CAAKC,UAAU,UACZH,GACC,gBAAC,IAAD,CAAMI,GAAIJ,EAAK,GAAGK,KAAMC,eAAe,OAAOC,MAAM,QACjDP,EAAK,GAAGQ,MAGZjB,GACC,gBAAC,KAAD,CAAIkB,GAAG,IAAIC,WAAW,aACnBnB,GAGJC,GACC,gBAAC,IAAD,CAAGmB,SAAS,MAAMT,KAAK,QAAQU,GAAG,QAC/BpB,GAIL,gBAAC,IAAD,CACEM,OAAQA,EACRC,WAAYA,EACZH,KAAMA,EACNC,SAAUA,EACVgB,WAAW,SACXC,eAAe,SACfL,GAAG,QAKRf,GACC,gBAAC,YAAD,CAAWqB,QAAQ,MACjB,gBAAC,IAAD,CACEC,IAAKtB,EACLH,MAAOA,EACP0B,IAAKtB,GAAWJ,EAChBI,QAASA,EACTiB,GAAG,OACHH,GAAG,SACHS,SAAS,SACTC,GAAI,CACFC,IAAK,CACHC,aAAc,UAOxB,gBAAC,YAAD,CAAWnB,KAAK,wBACd,gBAAC,IAAD,KAAcT,GAEbO,GACC,gBAAC,UAAD,CAASa,WAAW,SAASJ,GAAG,IAAIG,GAAG,QACpCZ,EAAKsB,KAAI,WAAiBC,GAAjB,IAAGf,EAAH,EAAGA,KAAMH,EAAT,EAASA,KAAT,OACR,gBAAC,IAAD,CACEmB,IAAKhB,EACLJ,GAAIC,EACJoB,QAAQ,eACRC,GAAG,QACHC,GAAG,IACH1B,GAAG,IACH2B,QAAQ,KACRrB,MAAM,OACND,eAAe,OACfK,SAAS,KACTkB,GAAc,IAAVN,GAAe,EACnBO,QAAQ,YACRC,WAAW,SAEVvB,U,ykBCnFR,IAAMwB,EAAK,aAcH,sBAAyB,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,wBAOrC,OANAA,EAAK,OACAD,EAAKE,MADL,IAEHC,SAAUH,EAAKI,KACfC,KAAML,EAAKK,MACRJ,GAGH,gBAAC,IAAD,CAAQK,SAAUN,EAAKE,KAAK9B,MAC1B,gBAAC,IAAD,eAAOW,IAAI,eAAkBkB,IAC5BD,EAAKE,KAAO,gBAAC,EAASD,GAAY,KACnC,gBAAC,IAAD,eAAOlB,IAAI,eAAkBkB,O,wHC3BtBM,EAAW,SAAC,GAAD,IAAG1C,EAAH,EAAGA,OAAQD,EAAX,EAAWA,SAAUD,EAArB,EAAqBA,KAAMG,EAA3B,EAA2BA,WAAemC,EAA1C,gEACtB,gBAAC,UAAYA,EACVpC,GACC,gBAAC,UAAD,CAASe,WAAW,SAAS4B,GAAG,KAC9B,gBAAC,IAAD,CACEzB,IAAKlB,EAAO4C,QACZC,EAAE,eACFC,EAAE,IACFH,GAAG,IACHI,KAAK,KACLjB,QAAQ,OACRV,SAAS,WAEX,gBAAC,OAAD,CAAMR,WAAW,YAAYZ,EAAOU,OAGvCZ,GAAQ,wBAAMkD,SAAUjD,GAAhB,MAA8BD,GACtCG,GAAc,gBAAC,OAAD,CAAM8B,GAAG,KAAT,MAAiB9B,EAAjB","file":"component---node-modules-reflexjs-gatsby-theme-post-src-post-template-js-cf87c656278f862b78b5.js","sourcesContent":["import * as React from \"react\"\nimport { MDXRenderer, Link } from \"@reflexjs/gatsby-theme-core\"\nimport { Article, Container, H1, Div, P, Flexbox } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\nimport { PostMeta } from \"./post-meta\"\n\nexport const Post = ({\n  title,\n  excerpt,\n  body,\n  image,\n  caption,\n  date,\n  datetime,\n  author,\n  timeToRead,\n  tags,\n}) => (\n  <Article py=\"8|12|14\">\n    <Container maxW=\"null|null|null|900px\">\n      <Div textAlign=\"center\">\n        {tags && (\n          <Link to={tags[0].slug} textDecoration=\"none\" color=\"text\">\n            {tags[0].name}\n          </Link>\n        )}\n        {title && (\n          <H1 my=\"0\" fontWeight=\"extrabold\">\n            {title}\n          </H1>\n        )}\n        {excerpt && (\n          <P fontSize=\"2xl\" maxW=\"700px\" mx=\"auto\">\n            {excerpt}\n          </P>\n        )}\n\n        <PostMeta\n          author={author}\n          timeToRead={timeToRead}\n          date={date}\n          datetime={datetime}\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          my=\"8\"\n        />\n      </Div>\n    </Container>\n\n    {image && (\n      <Container variant=\"lg\">\n        <Image\n          src={image}\n          title={title}\n          alt={caption || title}\n          caption={caption}\n          mx=\"auto\"\n          my=\"4|8|10\"\n          overflow=\"hidden\"\n          sx={{\n            img: {\n              borderRadius: \"md\",\n            },\n          }}\n        />\n      </Container>\n    )}\n\n    <Container maxW=\"null|null|null|900px\">\n      <MDXRenderer>{body}</MDXRenderer>\n\n      {tags && (\n        <Flexbox alignItems=\"center\" my=\"6\" mx=\"auto\">\n          {tags.map(({ name, slug }, index) => (\n            <Link\n              key={name}\n              to={slug}\n              display=\"inline-block\"\n              bg=\"muted\"\n              px=\"2\"\n              py=\"1\"\n              rounded=\"md\"\n              color=\"text\"\n              textDecoration=\"none\"\n              fontSize=\"sm\"\n              ml={index !== 0 && 2}\n              hoverBg=\"secondary\"\n              hoverColor=\"white\"\n            >\n              {name}\n            </Link>\n          ))}\n        </Flexbox>\n      )}\n    </Container>\n  </Article>\n)\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Layout } from \"@reflexjs/gatsby-theme-core\"\nimport { Block } from \"@reflexjs/gatsby-theme-block\"\nimport { Post } from \"./post\"\n\nexport const query = graphql`\n  query($id: String, $prev: String, $next: String) {\n    post(id: { eq: $id }) {\n      ...PostFragment\n    }\n    prev: post(id: { eq: $prev }) {\n      ...PostFragment\n    }\n    next: post(id: { eq: $next }) {\n      ...PostFragment\n    }\n  }\n`\n\nexport default ({ data, ...props }) => {\n  props = {\n    ...data.post,\n    previous: data.prev,\n    next: data.next,\n    ...props,\n  }\n  return (\n    <Layout pathname={data.post.slug}>\n      <Block src=\"post-header\" {...props} />\n      {data.post ? <Post {...props} /> : null}\n      <Block src=\"post-footer\" {...props} />\n    </Layout>\n  )\n}\n","import * as React from \"react\"\nimport { Flexbox, Span } from \"@reflexjs/components\"\nimport { Image } from \"@reflexjs/gatsby-plugin-image\"\n\nexport const PostMeta = ({ author, datetime, date, timeToRead, ...props }) => (\n  <Flexbox {...props}>\n    {author && (\n      <Flexbox alignItems=\"center\" mr=\"2\">\n        <Image\n          src={author.picture}\n          d=\"inline-block\"\n          m=\"0\"\n          mr=\"2\"\n          size=\"10\"\n          rounded=\"full\"\n          overflow=\"hidden\"\n        />\n        <Span fontWeight=\"semibold\">{author.name}</Span>\n      </Flexbox>\n    )}\n    {date && <time dateTime={datetime}> - {date}</time>}\n    {timeToRead && <Span ml=\"2\"> - {timeToRead} min read</Span>}\n  </Flexbox>\n)\n"],"sourceRoot":""}